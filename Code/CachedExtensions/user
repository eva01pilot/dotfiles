{"input":{"location":{"$mid":1,"external":"vscode-userdata:/home/ilya/.vscode/extensions/extensions.json","path":"/home/ilya/.vscode/extensions/extensions.json","scheme":"vscode-userdata"},"mtime":1680249668477,"profile":true,"profileScanOptions":{"bailOutWhenFileNotFound":true},"type":1,"excludeObsolete":true,"validate":true,"productVersion":"1.75.1","productDate":"2023-02-08T21:35:30.018Z","productCommit":"441438abd1ac652551dbe4d408dfcec8a499b8bf","devMode":false,"language":"en","translations":{}},"result":[{"type":1,"identifier":{"id":"vue.volar","uuid":"a5223b43-8621-4351-a14e-3d560f85f277"},"manifest":{"private":true,"name":"volar","version":"1.2.0","repository":{"type":"git","url":"https://github.com/johnsoncodehk/volar.git","directory":"packages/vscode-vue"},"categories":["Programming Languages"],"sponsor":{"url":"https://github.com/sponsors/johnsoncodehk"},"icon":"images/icon.png","displayName":"Vue Language Features (Volar)","description":"Language support for Vue 3","author":"johnsoncodehk","publisher":"Vue","engines":{"vscode":"^1.67.0"},"activationEvents":["onLanguage:vue","onLanguage:markdown","onLanguage:html","onLanguage:javascript","onLanguage:typescript","onLanguage:javascriptreact","onLanguage:typescriptreact","onLanguage:vue","onLanguage:markdown","onLanguage:html","onLanguage:jade","onLanguage:plaintext","onLanguage:vue-injection-markdown","onLanguage:vue-directives","onLanguage:vue-interpolations","onLanguage:vue-sfc-style-variable-injection","onCommand:volar.action.restartServer","onCommand:volar.action.reloadProject","onCommand:volar.action.doctor","onCommand:volar.action.writeVirtualFiles","onCommand:volar.action.showVirtualFiles","onCommand:volar.action.serverStats","onCommand:volar.action.showComponentMeta","onCommand:volar.action.splitEditors","onCommand:volar.selectTypeScriptVersion","onCommand:volar.vue.findAllFileReferences"],"main":"client","browser":"dist/browser/client","capabilities":{"untrustedWorkspaces":{"supported":"limited","description":"Workspace must be trusted for Volar to work properly.","restrictedConfigurations":["typescript.tsdk","typescript.tsserver.pluginPaths","typescript.npm"]}},"contributes":{"jsonValidation":[{"fileMatch":"tsconfig.json","url":"https://json.schemastore.org/tsconfig"},{"fileMatch":"tsconfig.*.json","url":"https://json.schemastore.org/tsconfig"},{"fileMatch":"tsconfig-*.json","url":"https://json.schemastore.org/tsconfig"},{"fileMatch":"typings.json","url":"https://json.schemastore.org/typings"},{"fileMatch":".bowerrc","url":"https://json.schemastore.org/bowerrc"},{"fileMatch":".babelrc","url":"https://json.schemastore.org/babelrc"},{"fileMatch":".babelrc.json","url":"https://json.schemastore.org/babelrc"},{"fileMatch":"babel.config.json","url":"https://json.schemastore.org/babelrc"},{"fileMatch":"jsconfig.json","url":"https://json.schemastore.org/jsconfig"},{"fileMatch":"jsconfig.*.json","url":"https://json.schemastore.org/jsconfig"},{"fileMatch":"tsconfig.json","url":"./dist/schemas/vue-tsconfig.schema.json"},{"fileMatch":"tsconfig-*.json","url":"./dist/schemas/vue-tsconfig.schema.json"},{"fileMatch":"tsconfig.*.json","url":"./dist/schemas/vue-tsconfig.schema.json"},{"fileMatch":"jsconfig.json","url":"./dist/schemas/vue-tsconfig.schema.json"},{"fileMatch":"jsconfig-*.json","url":"./dist/schemas/vue-tsconfig.schema.json"},{"fileMatch":"jsconfig.*.json","url":"./dist/schemas/vue-tsconfig.schema.json"},{"fileMatch":"tsconfig.json","url":"./dist/schemas/vue-tsconfig.deprecated.schema.json"},{"fileMatch":"tsconfig-*.json","url":"./dist/schemas/vue-tsconfig.deprecated.schema.json"},{"fileMatch":"tsconfig.*.json","url":"./dist/schemas/vue-tsconfig.deprecated.schema.json"},{"fileMatch":"jsconfig.json","url":"./dist/schemas/vue-tsconfig.deprecated.schema.json"},{"fileMatch":"jsconfig-*.json","url":"./dist/schemas/vue-tsconfig.deprecated.schema.json"},{"fileMatch":"jsconfig.*.json","url":"./dist/schemas/vue-tsconfig.deprecated.schema.json"}],"semanticTokenScopes":[{"language":"vue","scopes":{"component":["support.class.component.vue"]}},{"language":"markdown","scopes":{"component":["support.class.component.vue"]}},{"language":"html","scopes":{"component":["support.class.component.vue"]}}],"languages":[{"id":"vue","extensions":[".vue"],"configuration":"./languages/vue-language-configuration.json"},{"id":"markdown","configuration":"./languages/markdown-language-configuration.json"},{"id":"html","configuration":"./languages/sfc-template-language-configuration.json"},{"id":"jade","configuration":"./languages/sfc-template-language-configuration.json"},{"id":"plaintext","configuration":"./languages/sfc-template-language-configuration.json"},{"id":"vue-injection-markdown"},{"id":"vue-directives"},{"id":"vue-interpolations"},{"id":"vue-sfc-style-variable-injection"}],"grammars":[{"language":"vue","scopeName":"source.vue","path":"./syntaxes/vue.tmLanguage.json","embeddedLanguages":{"source.vue":"vue","text":"plaintext","text.html.derivative":"html","text.html.markdown":"markdown","text.pug":"jade","source.css":"css","source.css.scss":"scss","source.css.less":"less","source.sass":"sass","source.stylus":"stylus","source.postcss":"postcss","source.js":"javascript","source.ts":"typescript","source.js.jsx":"javascriptreact","source.tsx":"typescriptreact","meta.tag.js":"jsx-tags","meta.tag.tsx":"jsx-tags","meta.tag.without-attributes.js":"jsx-tags","meta.tag.without-attributes.tsx":"jsx-tags","source.json":"json","source.json.comments":"jsonc","source.json5":"json5","source.yaml":"yaml","source.toml":"toml","source.graphql":"graphql"},"unbalancedBracketScopes":["keyword.operator.relational","storage.type.function.arrow","keyword.operator.bitwise.shift","meta.brace.angle","punctuation.definition.tag"]},{"language":"vue-injection-markdown","scopeName":"markdown.vue.codeblock","path":"./syntaxes/markdown-vue.json","injectTo":["text.html.markdown"],"embeddedLanguages":{"meta.embedded.block.vue":"vue","source.vue":"vue","text":"plaintext","text.html.derivative":"html","text.html.markdown":"markdown","text.pug":"jade","source.css":"css","source.css.scss":"scss","source.css.less":"less","source.sass":"sass","source.stylus":"stylus","source.postcss":"postcss","source.js":"javascript","source.ts":"typescript","source.js.jsx":"javascriptreact","source.tsx":"typescriptreact","meta.tag.js":"jsx-tags","meta.tag.tsx":"jsx-tags","meta.tag.without-attributes.js":"jsx-tags","meta.tag.without-attributes.tsx":"jsx-tags","source.json":"json","source.json.comments":"jsonc","source.json5":"json5","source.yaml":"yaml","source.toml":"toml","source.graphql":"graphql"}},{"language":"vue-directives","scopeName":"vue.directives","path":"./syntaxes/vue-directives.json","injectTo":["source.vue","text.html.markdown","text.html.derivative","text.pug"]},{"language":"vue-interpolations","scopeName":"vue.interpolations","path":"./syntaxes/vue-interpolations.json","injectTo":["source.vue","text.html.markdown","text.html.derivative","text.pug"]},{"language":"vue-sfc-style-variable-injection","scopeName":"vue.sfc.style.variable.injection","path":"./syntaxes/vue-sfc-style-variable-injection.json","injectTo":["source.vue"]}],"breakpoints":[{"language":"vue"}],"configuration":{"type":"object","title":"Volar","properties":{"typescript.tsdk":{"type":"string"},"vue-semantic-server.trace.server":{"scope":"window","type":"string","enum":["off","messages","verbose"],"default":"off","description":"Traces the communication between VS Code and the language server."},"vue-syntactic-server.trace.server":{"scope":"window","type":"string","enum":["off","messages","verbose"],"default":"off","description":"Traces the communication between VS Code and the language server."},"volar.vueserver.configFilePath":{"type":"string","default":"./volar.config.js","description":"Path to volar.config.js."},"volar.vueserver.maxFileSize":{"type":"number","default":20971520,"description":"Maximum file size for Vue Server to load. (default: 20MB)"},"volar.vueserver.petiteVue.processHtmlFile":{"type":"boolean","default":false},"volar.vueserver.vitePress.processMdFile":{"type":"boolean","default":false},"volar.vueserver.json.customBlockSchemaUrls":{"type":"object"},"volar.vueserver.textDocumentSync":{"type":"string","default":"incremental","enum":["incremental","full","none"],"enumDescriptions":["Documents are synced by sending the full content on open. After that only incremental updates to the document are send.","Documents are synced by always sending the full content of the document.","Documents should not be synced at all."],"description":"Defines how the host (editor) should sync document changes to the language server. SFC incremental parser only working when config \"incremental\"."},"volar.vueserver.diagnosticModel":{"type":"string","default":"push","enum":["push","pull"],"enumDescriptions":["Diagnostic push by language server.","Diagnostic pull by language client."],"description":"Diagnostic update model."},"volar.vueserver.maxOldSpaceSize":{"type":["number","null"],"default":null,"description":"Set --max-old-space-size option on server process. If you have problem on frequently \"Request textDocument/** failed.\" error, try setting higher memory(MB) on it."},"volar.vueserver.noProjectReferences":{"type":"boolean","default":false,"description":"Ignore project references settings of tsconfig in language server for resolve issue #1916."},"volar.vueserver.reverseConfigFilePriority":{"type":"boolean","default":false,"description":"Reverse priority for tsconfig pickup."},"volar.vueserver.disableFileWatcher":{"type":"boolean","default":false,"description":"Disable file watcher in language server for better performance."},"volar.vueserver.additionalExtensions":{"type":"array","items":{"type":"string"},"default":[],"description":"List any additional file extensions that should be processed as Vue files (requires restart)."},"volar.vueserver.fullCompletionList":{"type":"boolean","default":false,"description":"Enable this option if you want to get complete CompletionList in language client. (Disable for better performance)"},"volar.codeLens.references":{"type":"boolean","default":true,"description":"[references] code lens."},"volar.inlayHints.missingRequiredProps":{"type":"boolean","default":true,"description":"Show inlay hints for missing required props."},"volar.inlayHints.eventArgumentInInlineHandlers":{"type":"boolean","default":true,"description":"Show inlay hints for event argument in inline handlers."},"volar.icon.splitEditors":{"type":"boolean","default":false,"description":"Show split editor icon in title area of editor."},"volar.doctor.statusBarItem":{"type":"boolean","default":true,"description":"Show known problems in status bar."},"volar.doctor.checkVueTsc":{"type":"boolean","default":false,"description":"Check vue-tsc version."},"volar.autoWrapParentheses":{"type":"boolean","default":true,"description":"Auto-wrap `()` to As Expression in interpolations for fix issue #520."},"volar.autoCompleteRefs":{"type":"boolean","default":false,"description":"Auto-complete Ref value with `.value`."},"volar.addSpaceBetweenDoubleCurlyBrackets":{"type":"boolean","default":true,"description":"Auto add space between double curly brackets: {{|}} -> {{ | }}"},"volar.format.initialIndent":{"type":"object","description":"Whether to have initial indent.","default":{"html":true},"properties":{"html":{"type":"boolean","default":true},"typescript":{"type":"boolean","default":false},"javascript":{"type":"boolean","default":false},"typescriptreact":{"type":"boolean","default":false},"javascriptreact":{"type":"boolean","default":false},"css":{"type":"boolean","default":false},"scss":{"type":"boolean","default":false},"less":{"type":"boolean","default":false},"sass":{"type":"boolean","default":false},"jade":{"type":"boolean","default":false},"json":{"type":"boolean","default":false},"jsonc":{"type":"boolean","default":false},"json5":{"type":"boolean","default":false}}},"volar.takeOverMode.extension":{"type":"string","default":"Vue.volar","description":"The extension that take over language support for *.ts."},"volar.completion.preferredTagNameCase":{"type":"string","enum":["auto-kebab","auto-pascal","kebab","pascal"],"enumDescriptions":["Auto Detect from Content (Preferred <kebab-case>)","Auto Detect from Content (Preferred <PascalCase>)","<kebab-case>","<PascalCase>"],"default":"auto-pascal","description":"Preferred tag name case."},"volar.completion.preferredAttrNameCase":{"type":"string","enum":["auto-kebab","auto-camel","kebab","camel"],"enumDescriptions":["Auto Detect from Content (Preferred :kebab-case=\"...\")","Auto Detect from Content (Preferred :camelCase=\"...\")",":kebab-case=\"...\"",":camelCase=\"...\""],"default":"auto-kebab","description":"Preferred attr name case."},"volar.completion.normalizeComponentImportName":{"type":"boolean","default":true,"description":"Normalize import name for auto import. (\"myCompVue\" -> \"MyComp\")"},"volar.splitEditors.layout.left":{"type":"array","default":["script","scriptSetup","styles"]},"volar.splitEditors.layout.right":{"type":"array","default":["template","customBlocks"]},"volar.updateImportsOnFileMove.enabled":{"type":"boolean","default":true,"description":"Enabled update imports on file move."},"volar.diagnostics.delay":{"type":"number","default":200,"description":"Delay time for diagnostics."}}},"commands":[{"command":"volar.action.restartServer","title":"Restart Vue server","category":"Volar"},{"command":"volar.action.reloadProject","title":"Reload Project","category":"Volar"},{"command":"volar.action.doctor","title":"Doctor","category":"Volar"},{"command":"volar.action.writeVirtualFiles","title":"Write Virtual Files","category":"Volar (Debug)"},{"command":"volar.action.showVirtualFiles","title":"Show Virtual Files","category":"Volar (Debug)"},{"command":"volar.action.serverStats","title":"Server Stats","category":"Volar (Debug)"},{"command":"volar.action.showComponentMeta","title":"Show Component Meta","category":"Volar"},{"command":"volar.action.splitEditors","title":"Split <script>, <template>, <style> Editors","category":"Volar","icon":"images/split-editors.png"},{"command":"volar.selectTypeScriptVersion","title":"Select TypeScript Version...","category":"Volar"},{"command":"volar.vue.findAllFileReferences","title":"Vue: Find File References","category":"Volar"}],"menus":{"commandPalette":[{"command":"volar.action.restartServer","when":"volar.activated"},{"command":"volar.action.reloadProject","when":"volar.activated"},{"command":"volar.action.doctor","when":"volar.activated"},{"command":"volar.action.writeVirtualFiles","when":"volar.activated"},{"command":"volar.action.showVirtualFiles","when":"volar.activated"},{"command":"volar.action.splitEditors","when":"editorLangId == vue"},{"command":"volar.selectTypeScriptVersion","when":"volar.activated"}],"editor/title":[{"command":"volar.action.splitEditors","when":"resourceLangId == vue && config.volar.icon.splitEditors","group":"navigation"}],"explorer/context":[{"command":"volar.vue.findAllFileReferences","when":"resourceLangId == typescript","group":"4_search"},{"command":"volar.vue.findAllFileReferences","when":"resourceLangId == typescriptreact","group":"4_search"},{"command":"volar.vue.findAllFileReferences","when":"resourceLangId == javascript","group":"4_search"},{"command":"volar.vue.findAllFileReferences","when":"resourceLangId == javascriptreact","group":"4_search"},{"command":"volar.vue.findAllFileReferences","when":"resourceLangId == vue","group":"4_search"},{"command":"volar.vue.findAllFileReferences","when":"resourceLangId == html","group":"4_search"}]},"problemMatchers":[{"name":"vite","label":"Vite problems","pattern":{"regexp":""},"background":{"activeOnStart":true,"beginsPattern":"restarting server...$","endsPattern":"\\s*ready in|server restarted."}}]},"scripts":{"prebuild":"cd ../.. && npm run build","build":"npm run build:node && npm run build:browser","watch":"npm run build:node -- --watch & npm run build:browser -- --watch","build:node":"node scripts/build-node","build:browser":"node scripts/build-browser","prepack:bundle-size":"npm run prebuild && npm run build:node -- --minify --metafile && npm run build:browser -- --empty","prepack:node":"npm run prebuild && npm run build:node -- --minify && npm run build:browser -- --empty","prepack:browser":"npm run prebuild && npm run build:browser -- --minify && npm run build:node -- --empty","pack:node":"npm run prepack:node && vsce package","pack:browser":"npm run prepack:browser && vsce package","release:node":"npm run prepack:node && vsce publish --target win32-x64 win32-ia32 win32-arm64 linux-x64 linux-arm64 linux-armhf darwin-x64 darwin-arm64 alpine-x64 alpine-arm64","release:browser":"npm run prepack:browser && vsce publish --target web","release":"npm run release:node && npm run release:browser","bundle-size":"npm run prepack:bundle-size && esbuild-visualizer --metadata ./meta.json && open ./stats.html"},"devDependencies":{"@types/semver":"^7.3.13","@types/vscode":"1.67.0","@volar/shared":"1.3.0-alpha.0","@volar/source-map":"1.3.0-alpha.0","@volar/vscode-language-client":"1.3.0-alpha.0","@volar/vue-language-core":"1.2.0","@volar/vue-language-server":"1.2.0","esbuild":"0.15.18","esbuild-plugin-copy":"latest","esbuild-visualizer":"latest","path-browserify":"^1.0.1","punycode":"^2.3.0","semver":"^7.3.8","typesafe-path":"^0.2.2","vsce":"latest","vscode-languageclient":"^8.1.0","vscode-nls":"^5.2.0"}},"location":{"$mid":1,"path":"/home/ilya/.vscode/extensions/vue.volar-1.2.0-linux-x64","scheme":"file"},"isBuiltin":false,"targetPlatform":"linux-x64","metadata":{"id":"a5223b43-8621-4351-a14e-3d560f85f277","publisherId":"49983e2f-38ad-4441-beea-d678b53d0549","publisherDisplayName":"Vue","targetPlatform":"linux-x64","isApplicationScoped":false,"updated":false,"isPreReleaseVersion":false,"installedTimestamp":1677924120310},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"dlasagno.rasi","uuid":"cc85263d-01d7-43bc-8ccf-50b9800b321e"},"manifest":{"name":"rasi","displayName":"Rasi","description":"Rofi theme language support","publisher":"dlasagno","author":"Daniele Lasagno","license":"MIT","version":"1.0.0","repository":{"type":"git","url":"https://github.com/dlasagno/vscode-rasi"},"bugs":{"url":"https://github.com/dlasagno/vscode-rasi/issues"},"homepage":"https://github.com/dlasagno/vscode-rasi#readme","engines":{"vscode":"^1.34.0"},"categories":["Programming Languages"],"keywords":["language","rofi","rasi"],"icon":"icon.png","contributes":{"languages":[{"id":"rasi","aliases":["Rasi","rasi"],"extensions":[".rasi"],"configuration":"./language-configuration.json"}],"grammars":[{"language":"rasi","scopeName":"source.rasi","path":"./syntaxes/rasi.tmLanguage.json"}]}},"location":{"$mid":1,"path":"/home/ilya/.vscode/extensions/dlasagno.rasi-1.0.0","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","metadata":{"id":"cc85263d-01d7-43bc-8ccf-50b9800b321e","publisherId":"ba4c558e-5e67-4f9b-930c-57b83bf89060","publisherDisplayName":"Daniele Lasagno","targetPlatform":"undefined","isApplicationScoped":false,"updated":false,"isPreReleaseVersion":false,"installedTimestamp":1677955996679,"preRelease":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"vscodevim.vim","uuid":"d96e79c6-8b25-4be3-8545-0e0ecefcae03"},"manifest":{"name":"vim","displayName":"Vim","description":"Vim emulation for Visual Studio Code","icon":"images/icon.png","version":"1.25.2","publisher":"vscodevim","galleryBanner":{"color":"#e3f4ff","theme":"light"},"license":"MIT","keywords":["vim","vi","vscodevim"],"repository":{"type":"git","url":"https://github.com/VSCodeVim/Vim.git"},"homepage":"https://github.com/VSCodeVim/Vim","bugs":{"url":"https://github.com/VSCodeVim/Vim/issues"},"engines":{"vscode":"^1.74.0"},"categories":["Other","Keymaps"],"extensionKind":["ui"],"sideEffects":false,"activationEvents":["*","onCommand:type","onCommand:toggleVim","onCommand:vim.showQuickpickCmdLine","onCommand:vim.editVimrc","onLanguage:vimrc"],"qna":"https://vscodevim.herokuapp.com/","main":"./out/extension","browser":"./out/extensionWeb","capabilities":{"untrustedWorkspaces":{"supported":true},"virtualWorkspaces":true},"contributes":{"commands":[{"command":"toggleVim","title":"Vim: Toggle Vim Mode"},{"command":"vim.showQuickpickCmdLine","title":"Vim: Show Command Line"},{"command":"vim.editVimrc","enablement":"!isWeb","title":"Vim: Edit .vimrc"}],"keybindings":[{"key":"Escape","command":"extension.vim_escape","when":"editorTextFocus && vim.active && !inDebugRepl"},{"key":"Escape","command":"notebook.cell.quitEdit","when":"inputFocus && notebookEditorFocused && !editorHasSelection && !editorHoverVisible && vim.active && vim.mode == 'Normal'"},{"key":"Home","command":"extension.vim_home","when":"editorTextFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"},{"key":"ctrl+home","command":"extension.vim_ctrl+home","when":"editorTextFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"},{"key":"End","command":"extension.vim_end","when":"editorTextFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"},{"key":"ctrl+end","command":"extension.vim_ctrl+end","when":"editorTextFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"},{"key":"Insert","command":"extension.vim_insert","when":"editorTextFocus && vim.active && !inDebugRepl"},{"key":"Backspace","command":"extension.vim_backspace","when":"editorTextFocus && vim.active && !inDebugRepl"},{"key":"Delete","command":"extension.vim_delete","when":"editorTextFocus && vim.active && !inDebugRepl"},{"key":"tab","command":"extension.vim_tab","when":"editorFocus && vim.active && vim.mode != 'Insert' && !inDebugRepl"},{"key":"shift+tab","command":"extension.vim_shift+tab","when":"editorFocus && vim.active && vim.mode != 'Insert' && !inDebugRepl"},{"key":"left","command":"extension.vim_left","when":"editorTextFocus && vim.active && !inDebugRepl"},{"key":"right","command":"extension.vim_right","when":"editorTextFocus && vim.active && !inDebugRepl"},{"key":"up","command":"extension.vim_up","when":"editorTextFocus && vim.active && !inDebugRepl && !suggestWidgetVisible && !parameterHintsVisible"},{"key":"down","command":"extension.vim_down","when":"editorTextFocus && vim.active && !inDebugRepl && !suggestWidgetVisible && !parameterHintsVisible"},{"key":"g g","command":"list.focusFirst","when":"listFocus && !inputFocus"},{"key":"h","command":"list.collapse","when":"listFocus && !inputFocus"},{"key":"j","command":"list.focusDown","when":"listFocus && !inputFocus"},{"key":"k","command":"list.focusUp","when":"listFocus && !inputFocus"},{"key":"l","command":"list.select","when":"listFocus && !inputFocus"},{"key":"o","command":"list.toggleExpand","when":"listFocus && !inputFocus"},{"key":"/","command":"list.toggleKeyboardNavigation","when":"listFocus && !inputFocus && listSupportsKeyboardNavigation"},{"key":"ctrl+a","command":"extension.vim_ctrl+a","when":"editorTextFocus && vim.active && vim.use<C-a> && !inDebugRepl"},{"key":"ctrl+b","command":"extension.vim_ctrl+b","when":"editorTextFocus && vim.active && vim.use<C-b> && vim.mode != 'Insert' && !inDebugRepl"},{"key":"ctrl+c","command":"extension.vim_ctrl+c","when":"editorTextFocus && vim.active && vim.use<C-c> && !inDebugRepl && vim.overrideCtrlC"},{"key":"ctrl+d","command":"extension.vim_ctrl+d","when":"editorTextFocus && vim.active && vim.use<C-d> && !inDebugRepl"},{"key":"ctrl+d","command":"list.focusPageDown","when":"listFocus && !inputFocus"},{"key":"ctrl+e","command":"extension.vim_ctrl+e","when":"editorTextFocus && vim.active && vim.use<C-e> && !inDebugRepl"},{"key":"ctrl+f","command":"extension.vim_ctrl+f","when":"editorTextFocus && vim.active && vim.use<C-f> && vim.mode != 'Insert' && !inDebugRepl"},{"key":"ctrl+g","command":"extension.vim_ctrl+g","when":"editorTextFocus && vim.active && vim.use<C-g> && !inDebugRepl"},{"key":"ctrl+h","command":"extension.vim_ctrl+h","when":"editorTextFocus && vim.active && vim.use<C-h> && !inDebugRepl"},{"key":"ctrl+i","command":"extension.vim_ctrl+i","when":"editorTextFocus && vim.active && vim.use<C-i> && !inDebugRepl"},{"key":"ctrl+j","command":"extension.vim_ctrl+j","when":"editorTextFocus && vim.active && vim.use<C-j> && !inDebugRepl"},{"key":"ctrl+k","command":"extension.vim_ctrl+k","when":"editorTextFocus && vim.active && vim.use<C-k> && !inDebugRepl"},{"key":"ctrl+l","command":"extension.vim_navigateCtrlL","when":"editorTextFocus && vim.active && vim.use<C-l> && !inDebugRepl"},{"key":"ctrl+m","command":"extension.vim_ctrl+m","when":"editorTextFocus && vim.active && vim.use<C-m> && !inDebugRepl || vim.mode == 'CommandlineInProgress' && vim.active && vim.use<C-m> && !inDebugRepl || vim.mode == 'SearchInProgressMode' && vim.active && vim.use<C-m> && !inDebugRepl"},{"key":"ctrl+n","command":"extension.vim_ctrl+n","when":"editorTextFocus && vim.active && vim.use<C-n> && !inDebugRepl || vim.mode == 'CommandlineInProgress' && vim.active && vim.use<C-n> && !inDebugRepl || vim.mode == 'SearchInProgressMode' && vim.active && vim.use<C-n> && !inDebugRepl"},{"key":"ctrl+o","command":"extension.vim_ctrl+o","when":"editorTextFocus && vim.active && vim.use<C-o> && !inDebugRepl"},{"key":"ctrl+p","command":"extension.vim_ctrl+p","when":"suggestWidgetVisible && vim.active && vim.use<C-p> && !inDebugRepl || vim.mode == 'CommandlineInProgress' && vim.active && vim.use<C-p> && !inDebugRepl || vim.mode == 'SearchInProgressMode' && vim.active && vim.use<C-p> && !inDebugRepl"},{"key":"ctrl+q","command":"extension.vim_winCtrlQ","when":"editorTextFocus && vim.active && vim.use<C-q> && !inDebugRepl"},{"key":"ctrl+r","command":"extension.vim_ctrl+r","when":"editorTextFocus && vim.active && vim.use<C-r> && !inDebugRepl"},{"key":"ctrl+s","command":"extension.vim_ctrl+s","when":"editorTextFocus && vim.active && vim.use<C-s> && !inDebugRepl"},{"key":"ctrl+t","command":"extension.vim_ctrl+t","when":"editorTextFocus && vim.active && vim.use<C-t> && !inDebugRepl"},{"key":"ctrl+u","command":"extension.vim_ctrl+u","when":"editorTextFocus && vim.active && vim.use<C-u> && !inDebugRepl"},{"key":"ctrl+u","command":"list.focusPageUp","when":"listFocus && !inputFocus"},{"key":"ctrl+v","command":"extension.vim_ctrl+v","when":"editorTextFocus && vim.active && vim.use<C-v> && !inDebugRepl"},{"key":"ctrl+w","command":"extension.vim_ctrl+w","when":"editorTextFocus && vim.active && vim.use<C-w> && !inDebugRepl"},{"key":"ctrl+x","command":"extension.vim_ctrl+x","when":"editorTextFocus && vim.active && vim.use<C-x> && !inDebugRepl"},{"key":"ctrl+y","command":"extension.vim_ctrl+y","when":"editorTextFocus && vim.active && vim.use<C-y> && !inDebugRepl"},{"key":"ctrl+z","command":"extension.vim_ctrl+z","when":"editorTextFocus && vim.active && vim.use<C-z> && !inDebugRepl"},{"key":"ctrl+6","command":"extension.vim_ctrl+6","when":"editorTextFocus && vim.active && vim.use<C-6> && !inDebugRepl"},{"key":"ctrl+^","command":"extension.vim_ctrl+^","when":"editorTextFocus && vim.active && vim.use<C-^> && !inDebugRepl"},{"key":"ctrl+[","command":"extension.vim_ctrl+[","when":"editorTextFocus && vim.active && vim.use<C-[> && !inDebugRepl"},{"key":"ctrl+]","command":"extension.vim_ctrl+]","when":"editorTextFocus && vim.active && vim.use<C-]> && !inDebugRepl"},{"key":"ctrl+shift+2","command":"extension.vim_ctrl+shift+2","when":"editorTextFocus && vim.active && vim.use<C-shift+2>"},{"key":"ctrl+up","command":"extension.vim_ctrl+up","when":"editorTextFocus && vim.active && vim.mode != 'Insert' && !inDebugRepl"},{"key":"ctrl+down","command":"extension.vim_ctrl+down","when":"editorTextFocus && vim.active && vim.mode != 'Insert' && !inDebugRepl"},{"key":"ctrl+left","command":"extension.vim_ctrl+left","when":"editorTextFocus && vim.active && vim.mode != 'Insert' && !inDebugRepl"},{"key":"ctrl+right","command":"extension.vim_ctrl+right","when":"editorTextFocus && vim.active && vim.mode != 'Insert' && !inDebugRepl"},{"key":"ctrl+pagedown","command":"extension.vim_ctrl+pagedown","when":"editorTextFocus && vim.active && vim.use<C-pagedown> && !inDebugRepl"},{"key":"ctrl+pageup","command":"extension.vim_ctrl+pageup","when":"editorTextFocus && vim.active && vim.use<C-pageup> && !inDebugRepl"},{"key":"ctrl+space","command":"extension.vim_ctrl+space","when":"editorTextFocus && vim.active && vim.use<C-space> && !inDebugRepl && vim.mode != 'Insert'"},{"key":"shift+G","command":"list.focusLast","when":"listFocus && !inputFocus"},{"key":"ctrl+backspace","command":"extension.vim_ctrl+backspace","when":"editorTextFocus && vim.active && vim.use<C-BS> && vim.mode != 'Insert' && !inDebugRepl"},{"key":"shift+backspace","command":"extension.vim_shift+backspace","when":"editorTextFocus && vim.active && vim.use<S-BS> && vim.mode != 'Insert' && !inDebugRepl"},{"key":"cmd+left","command":"extension.vim_cmd+left","when":"editorTextFocus && vim.active && vim.use<D-left> && !inDebugRepl && vim.mode != 'Insert'"},{"key":"cmd+right","command":"extension.vim_cmd+right","when":"editorTextFocus && vim.active && vim.use<D-right> && !inDebugRepl && vim.mode != 'Insert'"},{"key":"cmd+a","command":"extension.vim_cmd+a","when":"editorTextFocus && vim.active && vim.use<D-a> && !inDebugRepl && vim.mode != 'Insert'"},{"key":"cmd+c","command":"extension.vim_cmd+c","when":"editorTextFocus && vim.active && vim.use<D-c> && vim.overrideCopy && !inDebugRepl"},{"key":"cmd+d","command":"extension.vim_cmd+d","when":"editorTextFocus && vim.active && vim.use<D-d> && !inDebugRepl"},{"key":"cmd+v","command":"extension.vim_cmd+v","when":"editorTextFocus && vim.active && vim.use<D-v> && vim.mode == 'CommandlineInProgress' && !inDebugRepl || editorTextFocus && vim.active && vim.use<D-v> && vim.mode == 'SearchInProgressMode' && !inDebugRepl"},{"key":"ctrl+alt+down","linux":"shift+alt+down","mac":"cmd+alt+down","command":"extension.vim_cmd+alt+down","when":"editorTextFocus && vim.active && !inDebugRepl"},{"key":"ctrl+alt+up","linux":"shift+alt+up","mac":"cmd+alt+up","command":"extension.vim_cmd+alt+up","when":"editorTextFocus && vim.active && !inDebugRepl"},{"key":"j","command":"notebook.focusNextEditor","when":"vim.mode == 'Normal' && editorTextFocus && inputFocus && notebookEditorFocused && notebookEditorCursorAtBoundary != 'none' && notebookEditorCursorAtBoundary != 'top'"},{"key":"k","command":"notebook.focusPreviousEditor","when":"vim.mode == 'Normal' && editorTextFocus && inputFocus && notebookEditorFocused && notebookEditorCursorAtBoundary != 'bottom' && notebookEditorCursorAtBoundary != 'none'"}],"configuration":{"title":"Vim","type":"object","properties":{"vim.normalModeKeyBindings":{"type":"array","markdownDescription":"Remapped keys in Normal mode. Allows mapping to Vim commands or VS Code actions. See [README](https://github.com/VSCodeVim/Vim/#key-remapping) for details.","scope":"application"},"vim.normalModeKeyBindingsNonRecursive":{"type":"array","markdownDescription":"Non-recursive remapped keys in Normal mode. Allows mapping to Vim commands or VS Code actions. See [README](https://github.com/VSCodeVim/Vim/#key-remapping) for details.","scope":"application"},"vim.operatorPendingModeKeyBindings":{"type":"array","markdownDescription":"Remapped keys in OperatorPending mode. Allows mapping to Vim commands or VS Code actions. See [README](https://github.com/VSCodeVim/Vim/#key-remapping) for details.","scope":"application"},"vim.operatorPendingModeKeyBindingsNonRecursive":{"type":"array","markdownDescription":"Non-recursive remapped keys in OperatorPending mode. Allows mapping to Vim commands or VS Code actions. See [README](https://github.com/VSCodeVim/Vim/#key-remapping) for details.","scope":"application"},"vim.useCtrlKeys":{"type":"boolean","markdownDescription":"Enable some Vim Ctrl key commands that override otherwise common operations, like `Ctrl+C`.","default":true},"vim.leader":{"type":"string","markdownDescription":"What key should `<leader>` map to in remappings?","default":"\\"},"vim.searchHighlightColor":{"type":"string","markdownDescription":"Background color of non-current search matches. The color must not be opaque so as not to hide underlying decorations. Uses `#editor.findMatchHighlightColor#` from current theme if undefined."},"vim.searchHighlightTextColor":{"type":"string","markdownDescription":"Foreground color of non-current search matches."},"vim.searchMatchColor":{"type":"string","markdownDescription":"Background color of the current match. Uses `#editor.findMatchColor#` from current theme if undefined."},"vim.searchMatchTextColor":{"type":"string","markdownDescription":"Foreground color of the current match."},"vim.substitutionColor":{"type":"string","markdownDescription":"Background color of substituted text when `#editor.inccommand#` is enabled. Uses `#editor.findMatchColor#` from current theme if undefined."},"vim.substitutionTextColor":{"type":"string","markdownDescription":"Foreground color of substituted text when `#editor.inccommand#` is enabled."},"vim.highlightedyank.enable":{"type":"boolean","description":"Enable highlighting when yanking.","default":false},"vim.highlightedyank.color":{"type":"string","description":"Background color of yanked text. The color must not be opaque so as not to hide underlying decorations.","default":"rgba(250, 240, 170, 0.5)"},"vim.highlightedyank.textColor":{"type":"string","description":"Foreground color of yanked text."},"vim.highlightedyank.duration":{"type":"number","description":"Duration in milliseconds of the yank highlight.","default":200,"minimum":1},"vim.useSystemClipboard":{"type":"boolean","description":"Use system clipboard for unnamed register.","default":false},"vim.overrideCopy":{"type":"boolean","description":"Override VS Code's copy command with our own copy command, which works better with VSCodeVim. Turn this off if copying is not working.","default":true},"vim.insertModeKeyBindings":{"type":"array","markdownDescription":"Remapped keys in Insert mode. Allows mapping to Vim commands or VS Code actions. See [README](https://github.com/VSCodeVim/Vim/#key-remapping) for details.","scope":"application"},"vim.insertModeKeyBindingsNonRecursive":{"type":"array","markdownDescription":"Non-recursive keybinding overrides to use for Insert mode. Allows mapping to Vim commands or VS Code actions. See [README](https://github.com/VSCodeVim/Vim/#key-remapping) for details.","scope":"application"},"vim.visualModeKeyBindings":{"type":"array","markdownDescription":"Remapped keys in Visual mode. Allows mapping to Vim commands or VS Code actions. See [README](https://github.com/VSCodeVim/Vim/#key-remapping) for details.","scope":"application"},"vim.visualModeKeyBindingsNonRecursive":{"type":"array","markdownDescription":"Non-recursive keybinding overrides to use for Visual mode. Allows mapping to Vim commands or VS Code actions. See [README](https://github.com/VSCodeVim/Vim/#key-remapping) for details.","scope":"application"},"vim.commandLineModeKeyBindings":{"type":"array","markdownDescription":"Remapped keys in command line mode. Allows mapping to Vim commands or VS Code actions. See [README](https://github.com/VSCodeVim/Vim/#key-remapping) for details.","scope":"application"},"vim.commandLineModeKeyBindingsNonRecursive":{"type":"array","markdownDescription":"Non-recursive keybinding overrides to use for command line mode. Allows mapping to Vim commands or VS Code actions. See [README](https://github.com/VSCodeVim/Vim/#key-remapping) for details.","scope":"application"},"vim.textwidth":{"type":"number","markdownDescription":"Width to word-wrap to when using `gq`.","default":80,"scope":"language-overridable","minimum":1},"vim.timeout":{"type":"number","description":"Timeout in milliseconds for remapped commands.","default":1000,"minimum":0},"vim.maxmapdepth":{"type":"number","description":"Maximum number of times a mapping is done without resulting in a character to be used.","default":1000,"minimum":0},"vim.scroll":{"type":"number","markdownDescription":"Number of lines to scroll with `Ctrl-U` and `Ctrl-D` commands. Set to 0 to use a half page scroll.","default":0,"minimum":0},"vim.showcmd":{"type":"boolean","description":"Show the text of any command you are in the middle of writing.","default":true},"vim.showmodename":{"type":"boolean","description":"Show the name of the current mode in the statusbar.","default":true},"vim.iskeyword":{"type":"string","markdownDescription":"Keywords contain alphanumeric characters and '_'. If not configured, `#editor.wordSeparators#` is used."},"vim.ignorecase":{"type":"boolean","description":"Ignore case in search patterns.","default":true},"vim.smartcase":{"type":"boolean","markdownDescription":"Override the `ignorecase` option if the search pattern contains upper case characters.","default":true},"vim.matchpairs":{"type":"string","markdownDescription":"Characters that form pairs. The % command jumps from one to the other. Only character pairs are allowed that are different, thus you cannot jump between two double quotes. The characters must be separated by a colon. The pairs must be separated by a comma.","default":"(:),{:},[:]"},"vim.camelCaseMotion.enable":{"type":"boolean","markdownDescription":"Enable the [CamelCaseMotion](https://github.com/bkad/CamelCaseMotion) plugin for Vim.","default":false},"vim.easymotion":{"type":"boolean","markdownDescription":"Enable the [EasyMotion](https://github.com/easymotion/vim-easymotion) plugin for Vim.","default":false},"vim.easymotionMarkerBackgroundColor":{"type":"string","default":"#0000","description":"Set a custom background color for EasyMotion markers."},"vim.easymotionMarkerForegroundColorOneChar":{"type":"string","default":"#ff0000","description":"Set a custom color for the text on one character long markers."},"vim.easymotionMarkerForegroundColorTwoCharFirst":{"type":"string","default":"#ffb400","description":"Set a custom color for the first character on two character long markers."},"vim.easymotionMarkerForegroundColorTwoCharSecond":{"type":"string","default":"#b98300","description":"Set a custom color for the second character on two character long markers."},"vim.easymotionIncSearchForegroundColor":{"type":"string","default":"#7fbf00","markdownDescription":"Set a custom color for the easymotion search n-character (default `<leader><leader>/`)."},"vim.easymotionDimColor":{"type":"string","default":"#777777","markdownDescription":"Set a custom color for the easymotion dimmed characters when `#vim.easymotionDimBackground#` is set to true."},"vim.easymotionDimBackground":{"type":"boolean","description":"Whether to dim other text while markers are visible.","default":true},"vim.easymotionMarkerFontWeight":{"type":"string","description":"Set the font weight of the marker text.","default":"bold"},"vim.easymotionKeys":{"type":"string","description":"Set the characters used for jump marker name.","default":"hklyuiopnm,qwertzxcvbasdgjf;"},"vim.easymotionJumpToAnywhereRegex":{"type":"string","description":"Regex matches for JumpToAnywhere motion.","default":"\\b[A-Za-z0-9]|[A-Za-z0-9]\\b|_.|#.|[a-z][A-Z]"},"vim.replaceWithRegister":{"type":"boolean","markdownDescription":"Enable the [ReplaceWithRegister](https://github.com/vim-scripts/ReplaceWithRegister) plugin for Vim.","default":false},"vim.smartRelativeLine":{"type":"boolean","markdownDescription":"`#editor.lineNumbers#` is determined by the active Vim mode, absolute when in insert mode, relative otherwise.","default":false},"vim.targets.enable":{"type":"boolean","markdownDescription":"Enable [targets.vim](https://github.com/wellle/targets.vim#quote-text-objects) plugin (not fully implemented yet).","default":false},"vim.targets.bracketObjects.enable":{"type":"boolean","markdownDescription":"Enable last/next movements for bracket objects.","default":true},"vim.targets.smartQuotes.enable":{"type":"boolean","markdownDescription":"Enable the smart quotes movements from [targets.vim](https://github.com/wellle/targets.vim#quote-text-objects).","default":true},"vim.targets.smartQuotes.breakThroughLines":{"type":"boolean","markdownDescription":"Whether to break through lines when using [n]ext/[l]ast motion, see [targets.vim#next-and-last-quote](https://github.com/wellle/targets.vim#next-and-last-quote).","default":true},"vim.targets.smartQuotes.aIncludesSurroundingSpaces":{"type":"boolean","markdownDescription":"Whether to use default Vim behavior when using `a` (e.g. `da'`) which include surrounding spaces, or not, as for other text objects.","default":true},"vim.sneak":{"type":"boolean","markdownDescription":"Enable the [Sneak](https://github.com/justinmk/vim-sneak) plugin for Vim.","default":false},"vim.sneakUseIgnorecaseAndSmartcase":{"type":"boolean","markdownDescription":"Case sensitivity is determined by `#vim.ignorecase#` and `#vim.smartcase#`.","default":false},"vim.sneakReplacesF":{"type":"boolean","markdownDescription":"Use single-character [Sneak](https://github.com/justinmk/vim-sneak) instead of Vim's native `f`.","default":false},"vim.surround":{"type":"boolean","markdownDescription":"Enable the [Surround](https://github.com/tpope/vim-surround) plugin for Vim.","default":true},"vim.argumentObjectSeparators":{"type":"array","items":{"type":"string"},"markdownDescription":"Set separators for the argument text object.","default":[","]},"vim.argumentObjectOpeningDelimiters":{"type":"array","items":{"type":"string"},"markdownDescription":"Set opening delimiters for the argument text object.","default":["(","["]},"vim.argumentObjectClosingDelimiters":{"type":"array","items":{"type":"string"},"markdownDescription":"Set closing delimiters for the argument text object.","default":[")","]"]},"vim.hlsearch":{"type":"boolean","description":"Show all matches of the most recent search pattern.","default":false},"vim.inccommand":{"type":"string","markdownDescription":"Show the effects of the `:substitute` command as you type.","default":"replace","enum":["","append","replace"],"enumDescriptions":["Don't show substitutions","Show substitutions after matched text","Replace matched text with substitutions"]},"vim.incsearch":{"type":"boolean","markdownDescription":"Show where a `/` or `?` search matches as you type it.","default":true},"vim.history":{"type":"number","description":"How much search or command history should be remembered.","default":50,"minimum":1},"vim.autoindent":{"type":"boolean","description":"Indent code automatically.","default":true},"vim.joinspaces":{"type":"boolean","description":"Add two spaces after '.', '?', and '!' when joining or reformatting.","default":true},"vim.startInInsertMode":{"type":"boolean","description":"Start in Insert mode."},"vim.handleKeys":{"type":"object","description":"Delegate certain key combinations back to VSCode to be handled natively.","default":{"<C-d>":true,"<C-s>":false,"<C-z>":false}},"vim.statusBarColorControl":{"type":"boolean","markdownDescription":"Allow VSCodeVim to change status bar color based on mode. **NOTE:** Using this feature will have a negative impact on performance.","default":false},"vim.statusBarColors.normal":{"type":["string","array"],"description":"Status bar color when in Normal mode.","default":"#005f5f"},"vim.statusBarColors.insert":{"type":["string","array"],"description":"Status bar color when in Insert mode.","default":"#5f0000"},"vim.statusBarColors.visual":{"type":["string","array"],"description":"Status bar color when in Visual mode.","default":"#5f00af"},"vim.statusBarColors.visualline":{"type":["string","array"],"description":"Status bar color when in VisualLine mode.","default":"#005f5f"},"vim.statusBarColors.visualblock":{"type":["string","array"],"description":"Status bar color when in VisualBlock mode.","default":"#86592d"},"vim.statusBarColors.replace":{"type":["string","array"],"description":"Status bar color when in Replace mode.","default":"#00000"},"vim.statusBarColors.commandlineinprogress":{"type":["string","array"],"description":"Status bar color when in CommandLineInProgress mode.","default":"#007acc"},"vim.statusBarColors.searchinprogressmode":{"type":["string","array"],"description":"Status bar color when in SearchInProgress mode.","default":"#007acc"},"vim.statusBarColors.easymotionmode":{"type":["string","array"],"description":"Status bar color when in EasyMotion mode.","default":"#007acc"},"vim.statusBarColors.easymotioninputmode":{"type":["string","array"],"description":"Status bar color when in EasyMotionInput mode.","default":"#007acc"},"vim.statusBarColors.surroundinputmode":{"type":["string","array"],"description":"Status bar color when in SurroundInput mode.","default":"#007acc"},"vim.visualstar":{"type":"boolean","markdownDescription":"In Visual mode, start a search with `*` or `#` using the current selection.","default":false},"vim.changeWordIncludesWhitespace":{"type":"boolean","description":"Includes trailing whitespace when changing word.","default":false},"vim.foldfix":{"type":"boolean","description":"Uses a hack to move around folds properly.","default":false},"vim.mouseSelectionGoesIntoVisualMode":{"type":"boolean","description":"If enabled, dragging with the mouse activates Visual mode.","default":true},"vim.disableExtension":{"type":"boolean","description":"Disables the VSCodeVim extension. The extension will continue to be loaded and activated, but Vim functionality will be disabled.","default":false},"vim.enableNeovim":{"type":"boolean","markdownDescription":"Use Neovim to execute Ex commands. You should restart VS Code after enabling/disabling this for the changes to take effect. **NOTE:** Neovim version 0.2.0 or greater must be installed, and if the executable is not on your PATH, `#vim.neovimPath#` must be set.","default":false},"vim.neovimPath":{"type":"string","markdownDescription":"Path to Neovim executable. For example, `/usr/bin/nvim`, or  `C:\\Program Files\\Neovim\\bin\\nvim.exe`.","default":"","scope":"machine"},"vim.neovimUseConfigFile":{"type":"boolean","markdownDescription":"Use a config file for Neovim, specified by `vim.neovimConfigPath`.","default":false},"vim.neovimConfigPath":{"type":"string","markdownDescription":"Path to Neovim configuration file. `vim.neovimUseConfigFile` must be enabled. If path is left blank, Neovim will use its default config path, i.e. `~/.config/nvim/init.vim` or 'C:\\Users\\USERNAME\\AppData\\Local\\nvim\\init.vim'.","default":"","scope":"machine"},"vim.vimrc.enable":{"type":"boolean","markdownDescription":"Use key mappings from a `.vimrc` file.","default":false},"vim.vimrc.path":{"type":"string","markdownDescription":"Path to a Vim configuration file. If unset, it will check for `$HOME/.vscodevimrc`, `$HOME/.vimrc`, `$HOME/_vimrc`, and `$HOME/.config/nvim/init.vim`, in that order."},"vim.substituteGlobalFlag":{"type":"boolean","markdownDescription":"Automatically apply the global flag, `/g`, to substitute commands. When set to true, use `/g` to mean only first match should be replaced.","default":false,"markdownDeprecationMessage":"**Deprecated**: Please use `#vim.gdefault#` instead.","deprecationMessage":"Deprecated: Please use vim.gdefault instead."},"vim.gdefault":{"type":"boolean","markdownDescription":"Automatically apply the global flag, `/g`, to substitute commands. When set to true, use `/g` to mean only first match should be replaced.","default":false},"vim.cursorStylePerMode.normal":{"type":"string","description":"Cursor style for Normal mode.","enum":["","block","block-outline","line","line-thin","underline","underline-thin"]},"vim.cursorStylePerMode.insert":{"type":"string","description":"Cursor style for Insert mode.","enum":["","block","block-outline","line","line-thin","underline","underline-thin"]},"vim.cursorStylePerMode.replace":{"type":"string","description":"Cursor style for Replace mode.","enum":["","block","block-outline","line","line-thin","underline","underline-thin"]},"vim.cursorStylePerMode.visual":{"type":"string","description":"Cursor style for Visual mode.","enum":["","block","block-outline","line","line-thin","underline","underline-thin"]},"vim.cursorStylePerMode.visualline":{"type":"string","description":"Cursor style for VisualLine mode.","enum":["","block","block-outline","line","line-thin","underline","underline-thin"]},"vim.cursorStylePerMode.visualblock":{"type":"string","description":"Cursor style for VisualBlock mode.","enum":["","block","block-outline","line","line-thin","underline","underline-thin"]},"vim.autoSwitchInputMethod.enable":{"type":"boolean","description":"If enabled, the input method switches automatically when the mode changes.","default":false},"vim.autoSwitchInputMethod.defaultIM":{"type":"string","markdownDescription":"The input method for your normal mode, find more information [here](https://github.com/VSCodeVim/Vim#input-method).","default":"","scope":"machine"},"vim.autoSwitchInputMethod.switchIMCmd":{"type":"string","description":"The shell command to switch input method.","default":"/path/to/im-select {im}","scope":"machine"},"vim.autoSwitchInputMethod.obtainIMCmd":{"type":"string","description":"The shell command to get current input method.","default":"/path/to/im-select","scope":"machine"},"vim.whichwrap":{"type":"string","description":"Comma-separated list of motion keys that should wrap to next/previous line.","default":"b,s"},"vim.report":{"type":"number","description":"Threshold for reporting number of lines changed.","default":2,"minimum":1},"vim.digraphs":{"type":"object","description":"Custom digraph shortcuts for inserting special characters, expressed as UTF16 code points.","default":{}},"vim.wrapscan":{"type":"boolean","description":"Searches wrap around the end of the file.","default":true},"vim.startofline":{"type":"boolean","markdownDescription":"When `true` the commands listed below move the cursor to the first non-blank of the line.  When `false` the cursor is kept in the same column (if possible).  This applies to the commands: `<C-d>`, `<C-u>`, `<C-b>`, `<C-f>`, `G`, `H`, `M`, `L`, `gg`, and to the commands `d`, `<<` and `>>` with a linewise operator.","default":true},"vim.showMarksInGutter":{"type":"boolean","description":"Show the currently set mark(s) in the gutter.","default":false},"vim.shell":{"type":"string","description":"Path to the shell to use for `!` and `:!` commands.","default":""}}},"languages":[{"id":"vimrc","extensions":[".vimrc"],"configuration":"./language-configuration.json"}],"grammars":[{"language":"vimrc","scopeName":"source.vimrc","path":"./syntaxes/vimrc.tmLanguage.json"}]},"scripts":{"vscode:prepublish":"gulp build","build":"gulp build","build-dev":"gulp build-dev","build-test":"gulp prepare-test","test":"node ./out/test/runTest.js","lint":"tslint --project .","lint:fix":"tslint --project . --fix","prettier":"prettier --write .","prettier:check":"prettier --check .","watch":"webpack -c webpack.dev.js --watch","package":"yarn run vsce package --yarn --allow-star-activation","prepare":"husky install"},"dependencies":{"diff-match-patch":"1.0.5","lodash":"^4.17.21","neovim":"4.10.1","os-browserify":"0.3.0","parsimmon":"^1.18.0","path-browserify":"1.0.1","process":"0.11.10","queue":"^6.0.2","untildify":"4.0.0","util":"0.12.5"},"devDependencies":{"@types/diff":"5.0.2","@types/diff-match-patch":"1.0.32","@types/glob":"8.1.0","@types/lodash":"4.14.191","@types/mocha":"10.0.1","@types/node":"16.18.13","@types/parsimmon":"1.10.6","@types/sinon":"10.0.13","@types/vscode":"1.74.0","@vscode/test-electron":"2.3.0","circular-dependency-plugin":"^5.2.2","clean-webpack-plugin":"4.0.0","event-stream":"4.0.1","fork-ts-checker-webpack-plugin":"7.3.0","gulp":"4.0.2","gulp-bump":"3.2.0","gulp-git":"2.10.1","gulp-tag-version":"1.3.1","gulp-typescript":"5.0.1","husky":"^8.0.3","lint-staged":"^13.1.2","minimist":"1.2.8","mocha":"10.2.0","plugin-error":"2.0.1","prettier":"2.8.4","sinon":"15.0.1","ts-loader":"9.4.2","tslint":"6.1.3","typescript":"4.9.5","vsce":"2.15.0","webpack":"5.75.0","webpack-cli":"5.0.1","webpack-merge":"5.8.0","webpack-stream":"7.0.0"},"lint-staged":{"*.{ts,js,json,md,yml}":"prettier --write","*.{ts}":"tslint --fix"}},"location":{"$mid":1,"path":"/home/ilya/.vscode/extensions/vscodevim.vim-1.25.2","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","metadata":{"id":"d96e79c6-8b25-4be3-8545-0e0ecefcae03","publisherId":"5d63889b-1b67-4b1f-8350-4f1dce041a26","publisherDisplayName":"vscodevim","targetPlatform":"undefined","isApplicationScoped":false,"updated":false,"isPreReleaseVersion":false,"installedTimestamp":1677961636698,"preRelease":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"vintharas.learn-vim","uuid":"159d930e-fdd0-42de-bbf8-5f62686e83a7"},"manifest":{"name":"learn-vim","icon":"media/icon.png","displayName":"Learn Vim","description":"Learn Vim right within your favorite editor","version":"0.0.28","publisher":"vintharas","keywords":["vim","vi","vscodevim"],"engines":{"vscode":"^1.48.0"},"categories":["Other"],"activationEvents":["onCommand:learn-vim.learnVim","onView:learn-vim","onCommand:learn-vim.learnVim","onCommand:learn-vim.openChapter","onView:learn-vim"],"main":"./out/extension.js","contributes":{"commands":[{"command":"learn-vim.learnVim","title":"Learn Vim"},{"command":"learn-vim.openChapter","title":"Open Chapter"}],"menus":{"commandPalette":[{"command":"learn-vim.openChapter","when":"false"}]},"viewsContainers":{"activitybar":[{"id":"learn-vim-container","title":"Learn Vim","icon":"media/code.svg"}]},"views":{"learn-vim-container":[{"id":"learn-vim","name":"Learn Vim"}]}},"scripts":{"vscode:prepublish":"npm run compile","compile":"tsc -p ./","lint":"eslint src --ext ts","watch":"tsc -watch -p ./","pretest":"npm run compile && npm run lint","test":"node ./out/test/runTest.js"},"devDependencies":{"@types/vscode":"^1.48.0","@types/glob":"^7.1.3","@types/mocha":"^8.0.0","@types/node":"^14.0.27","eslint":"^7.6.0","@typescript-eslint/eslint-plugin":"^3.8.0","@typescript-eslint/parser":"^3.8.0","glob":"^7.1.6","mocha":"^8.0.1","typescript":"^3.8.3","vscode-test":"^1.4.0"}},"location":{"$mid":1,"path":"/home/ilya/.vscode/extensions/vintharas.learn-vim-0.0.28","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","metadata":{"id":"159d930e-fdd0-42de-bbf8-5f62686e83a7","publisherId":"b4de0dac-3370-427d-bfc7-59da015f6b95","publisherDisplayName":"vintharas","targetPlatform":"undefined","isApplicationScoped":false,"updated":false,"isPreReleaseVersion":false,"installedTimestamp":1677961660350,"preRelease":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"dsznajder.es7-react-js-snippets","uuid":"19804510-b475-4dae-b0f7-6ca08fd1af0c"},"manifest":{"name":"es7-react-js-snippets","displayName":"ES7+ React/Redux/React-Native snippets","description":"Extensions for React, React-Native and Redux in JS/TS with ES7+ syntax. Customizable. Built-in integration with prettier.","version":"4.4.3","publisher":"dsznajder","icon":"images/logo.png","browser":"./lib/index.js","main":"./lib/index.js","keywords":["snippets","react","redux","react-native","customizable","javascript","typescript","prettier"],"license":"MIT","repository":{"type":"git","url":"https://github.com/dsznajder/vscode-es7-javascript-react-snippets"},"engines":{"vscode":"^1.60.0"},"categories":["Snippets"],"extensionKind":["ui","workspace"],"capabilities":{"virtualWorkspaces":true,"untrustedWorkspaces":{"supported":true}},"activationEvents":["onLanguage:typescript","onLanguage:typescriptReact","onLanguage:javascript","onLanguage:javascriptReact","onCommand:reactSnippets.search","onStartupFinished","onCommand:reactSnippets.search"],"contributes":{"commands":[{"command":"reactSnippets.search","title":"Snippet search"}],"keybindings":[{"command":"reactSnippets.search","key":"ctrl+alt+r","mac":"shift+cmd+r","when":"editorTextFocus"}],"configuration":{"title":"ES React/React-Native/Redux snippets","properties":{"reactSnippets.settings.prettierEnabled":{"type":"boolean","markdownDescription":"[EXPERIMENTAL: MIGHT NOT WORK]: Integrate prettier settings with code generated from snippets.","default":false},"reactSnippets.settings.importReactOnTop":{"type":"boolean","markdownDescription":"Controls if snippets should add `import React from 'react';` at the top of components.\nUse if you have React +17 and use jsx transform.","default":true},"reactSnippets.settings.typescript":{"type":"boolean","markdownDescription":"Controls if React components have typescript Props typing.","default":true},"reactSnippets.settings.languageScopes":{"type":"string","markdownDescription":"defines the language scopes for which the snippets will be available.\nUse comma separated values.\nFor example: `typescript,typescriptreact,javascript,javascriptreact`","default":"typescript,typescriptreact,javascript,javascriptreact"},"reactSnippets.settings.typescriptPropsStatePrefix":{"type":"string","markdownDescription":"Controls which prefix for typescript snippets should use for props/state.","default":"type","enum":["type","interface"]}}},"snippets":[{"language":"javascript","path":"./lib/snippets/generated.json"},{"language":"javascriptreact","path":"./lib/snippets/generated.json"},{"language":"typescript","path":"./lib/snippets/generated.json"},{"language":"typescriptreact","path":"./lib/snippets/generated.json"}]},"scripts":{"vscode:prepublish":"yarn compile","compile":"rm -rf lib; tsc -p ./ --noEmit false --module commonjs --outDir lib","compile:dev":"rm -rf lib; tsc -p ./ --noEmit false --module commonjs --outDir lib","lint":"eslint --ext .js,.ts,.tsx ./src/","watch":"tsc -watch -p ./","typescript":"tsc --noEmit"},"dependencies":{"prettier":"2.5.1"},"peerDependencies":{"prettier":"^2"},"devDependencies":{"@babel/cli":"7.17.0","@babel/eslint-parser":"7.17.0","@babel/preset-typescript":"7.16.7","@types/node":"17.0.16","@types/prettier":"2.4.3","@types/vscode":"^1.60.0","@typescript-eslint/eslint-plugin":"5.11.0","@typescript-eslint/parser":"5.11.0","eslint":"8.8.0","eslint-config-prettier":"8.3.0","eslint-plugin-babel":"5.3.1","eslint-plugin-eslint-comments":"3.2.0","eslint-plugin-import":"2.25.4","eslint-plugin-jest":"26.1.0","eslint-plugin-prettier":"4.0.0","eslint-plugin-simple-import-sort":"7.0.0","prettier":"2.5.1","typescript":"4.5.5"},"prettier":{"bracketSameLine":false,"bracketSpacing":true,"printWidth":80,"semi":true,"singleQuote":true,"tabWidth":2,"trailingComma":"all","useTabs":false,"endOfLine":"auto"}},"location":{"$mid":1,"path":"/home/ilya/.vscode/extensions/dsznajder.es7-react-js-snippets-4.4.3","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","metadata":{"id":"19804510-b475-4dae-b0f7-6ca08fd1af0c","publisherId":"7ea644b4-2d93-4979-aac5-a12afebeb762","publisherDisplayName":"dsznajder","targetPlatform":"undefined","isApplicationScoped":false,"updated":false,"isPreReleaseVersion":false,"installedTimestamp":1678556553027,"preRelease":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"vue.vscode-typescript-vue-plugin","uuid":"78d16c76-388b-44e4-8470-6790d6c3d2d1"},"manifest":{"private":true,"name":"vscode-typescript-vue-plugin","version":"1.2.0","repository":{"type":"git","url":"https://github.com/johnsoncodehk/volar.git","directory":"packages/vscode-typescript-vue-plugin"},"sponsor":{"url":"https://github.com/sponsors/johnsoncodehk"},"icon":"images/icon.png","displayName":"TypeScript Vue Plugin (Volar)","description":"Vue Plugin for TypeScript server","author":"johnsoncodehk","publisher":"Vue","engines":{"vscode":"*"},"contributes":{"typescriptServerPlugins":[{"name":"typescript-vue-plugin-forward","enableForWorkspaceTypeScriptVersions":true}]},"scripts":{"vscode:prepublish":"npm run build","prebuild":"cd ../.. && npm run build","build":"npm run esbuild","watch":"npm run esbuild -- --watch","esbuild":"node scripts/build-node","pack":"vsce package","release":"vsce publish"},"dependencies":{},"devDependencies":{"esbuild":"0.15.18","typescript-vue-plugin":"1.2.0","vsce":"latest"}},"location":{"$mid":1,"path":"/home/ilya/.vscode/extensions/vue.vscode-typescript-vue-plugin-1.2.0","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","metadata":{"id":"78d16c76-388b-44e4-8470-6790d6c3d2d1","publisherId":"49983e2f-38ad-4441-beea-d678b53d0549","publisherDisplayName":"Vue","targetPlatform":"undefined","isApplicationScoped":false,"updated":false,"isPreReleaseVersion":false,"installedTimestamp":1678613457795},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"devsense.profiler-php-vscode","uuid":"6e4e2904-96c2-4c5c-8b78-23da062f2f9e"},"manifest":{"name":"profiler-php-vscode","displayName":"PHP Profiler","description":"Support for PHP (Xdebug) profiling files and inspecting them.","icon":"icons/profiler-icon.png","version":"1.32.12895","qna":"https://community.devsense.com/","publisher":"DEVSENSE","preview":true,"license":"LicenseRef-LICENSE","galleryBanner":{"color":"#b9dcf4","theme":"light"},"repository":{"type":"git","url":"https://github.com/DEVSENSE/phptools-docs"},"homepage":"https://www.devsense.com/","engines":{"vscode":"^1.63.1","node":"^8.11.0"},"categories":["Programming Languages","Testing","Debuggers","Other","Visualization"],"keywords":["php","xdebug","profiler","profile","php tools","cachegrind","tools"],"activationEvents":["onCommand:phpprofiler.openfile","onCommand:phpprofiler.loadprofile","onCustomEditor:phpprofiler.cachegrind","onLanguage:php","onLanguage:cachegrind","onCommand:phpprofiler.openfile","onCommand:phpprofiler.loadprofile","onCustomEditor:phpprofiler.cachegrind"],"main":"./out/src/extension","contributes":{"languages":[{"id":"php"},{"id":"cachegrind","filenamePatterns":["cachegrind.out.*.gz"]}],"configuration":{"type":"object","title":"PHP Profiler","properties":{"phpprofiler.hotpath.treshold":{"type":"number","default":1,"markdownDescription":"(`0`..`100`) Value specifies minimum time (_in percent_) so the line in source code will be highlighted as hot-path."}}},"commands":[{"category":"PHP Profiler","title":"Open Profile File (Xdebug Profiling Output)","command":"phpprofiler.openfile"},{"category":"PHP Profiler","title":"Load CacheGrind Profile (from Xdebug)","command":"phpprofiler.loadprofile","enablement":"false"}],"taskDefinitions":[],"keybindings":[],"debuggers":[],"walkthroughs":[],"customEditors":[{"viewType":"phpprofiler.cachegrind","displayName":"CacheGrind (from Xdebug)","selector":[{"filenamePattern":"cachegrind.out.*.gz"}]}]},"capabilities":{"virtualWorkspaces":{"supported":true,"description":"Virtual workspaces are supported as long as you can open a remote file."},"untrustedWorkspaces":{"supported":true,"description":"All functionality is enabled as long as you can open a remote file."}},"badges":[{"url":"https://badgen.net/badge/@php4vs/twitter/blue?icon=twitter","href":"https://twitter.com/php4vs","description":"PHP Tools on Twitter"},{"url":"https://img.shields.io/badge/-changelog-green","href":"https://www.devsense.com/en?from=vscode","description":"PHP Tools product page"}],"scripts":{"prepare":"powershell ./prepare.ps1","precompile":"npm run -S prepare","esbuild-base":"esbuild ./src/extension.ts --bundle --outfile=out/src/extension.js --external:vscode --format=cjs --platform=node","vscode:prepublish":"npm run -S esbuild-base -- --minify && powershell ./minify.ps1","compile":"npm run -S esbuild-base -- --sourcemap","postinstall":"","vscode:uninstall":""},"dependencies":{"readline":"1.3.0","applicationinsights":"^1.8.10","escape-string-regexp":"^1.0.5","file-url":"^2.0.0","http-proxy-agent":"^2.1.0","https-proxy-agent":"^2.2.4","iconv-lite":"^0.4.15","jsencrypt":"^3.2.1","minimatch":"^3.0.4","moment":"^2.17.1","node-rsa":"^1.0.7","open":"^8.4.0","recursive-readdir-sync":"^1.0.6","string-hash":"^1.1.3","urlencode":"^1.1.0","uuid":"^7","vsce":"^2.7.0","vscode-languageclient":"^7.0.0","vscode-languageserver":"^7.0.0","vscode-languageserver-protocol-foldingprovider":"^2.0.1","vscode-languageserver-textdocument":"^1.0.7","xmldom":"^0.6.0","xmlhttprequest":"^1.8.0"},"devDependencies":{"@types/mocha":"^5.2.7","@types/node":"^10.17.60","@types/vscode":"^1.63.1","esbuild":"^0.14.48","mocha":"^9.2.2","typescript":"^4.8.3","uglify-js":"^3.16.1"}},"location":{"$mid":1,"path":"/home/ilya/.vscode/extensions/devsense.profiler-php-vscode-1.32.12895","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","metadata":{"id":"6e4e2904-96c2-4c5c-8b78-23da062f2f9e","publisherId":"5db849bc-0940-444f-8936-5d2cdbb81abb","publisherDisplayName":"DEVSENSE","targetPlatform":"undefined","isApplicationScoped":false,"updated":true,"isPreReleaseVersion":false,"installedTimestamp":1680177134091,"preRelease":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"devsense.composer-php-vscode","uuid":"eed2a934-7bb6-4a5b-a29d-353077efd839"},"manifest":{"name":"composer-php-vscode","displayName":"Composer","description":"All-in-One composer integration, quick actions, commands, automatic installation, tasks, code lenses, diagnostics, and composer.json IntelliSense.","icon":"icons/composer-icon.png","version":"1.32.12895","qna":"https://community.devsense.com/","publisher":"DEVSENSE","preview":false,"license":"LicenseRef-LICENSE","galleryBanner":{"color":"#b9dcf4","theme":"light"},"repository":{"type":"git","url":"https://github.com/DEVSENSE/phptools-docs"},"homepage":"https://www.devsense.com/","engines":{"vscode":"^1.63.1","node":"^8.11.0"},"categories":["Programming Languages","Snippets","Linters","Other","Visualization"],"keywords":["php","composer","schema","validation","commands","tools","php tools","packagist","codelens"],"activationEvents":["workspaceContains:composer.json","onCommand:composer.download","onCommand:composer.install","onCommand:composer.require","onCommand:composer.require-dev","onCommand:composer.update","onCommand:composer.remove","onCommand:composer.clear-cache","onCommand:composer.create-project","onCommand:composer.search","onCommand:composer.about","onCommand:composer.licenses","onCommand:composer.fund","onCommand:composer.archive","onCommand:composer.reinstall","onCommand:composer.check-platform-reqs","onCommand:composer.run-script","onCommand:composer.show-tree","onCommand:composer.outdated","onLanguage:json","onCommand:composer.download","onCommand:composer.install","onCommand:composer.update","onCommand:composer.create-project","onCommand:composer.require","onCommand:composer.require-dev","onCommand:composer.remove","onCommand:composer.about","onCommand:composer.archive","onCommand:composer.clear-cache","onCommand:composer.fund","onCommand:composer.licenses","onCommand:composer.check-platform-reqs","onCommand:composer.outdated","onCommand:composer.search","onCommand:composer.reinstall","onCommand:composer.run-script","onCommand:composer.show-tree"],"main":"./out/src/extension","contributes":{"languages":[{"id":"json"}],"configuration":{"type":"object","title":"Composer","properties":{}},"jsonValidation":[{"fileMatch":"composer.json","url":"https://raw.githubusercontent.com/composer/composer/master/res/composer-schema.json"}],"commands":[{"category":"Composer","title":"update local 'composer.phar' ...","command":"composer.download"},{"category":"Composer","title":"install","command":"composer.install"},{"category":"Composer","title":"update","command":"composer.update"},{"category":"Composer","title":"create-project ...","command":"composer.create-project"},{"category":"Composer","title":"require package ...","command":"composer.require"},{"category":"Composer","title":"require dev package ...","command":"composer.require-dev"},{"category":"Composer","title":"remove package ...","command":"composer.remove"},{"category":"Composer","title":"about","command":"composer.about"},{"category":"Composer","title":"archive ...","command":"composer.archive"},{"category":"Composer","title":"clear-cache","command":"composer.clear-cache"},{"category":"Composer","title":"fund","command":"composer.fund"},{"category":"Composer","title":"licenses","command":"composer.licenses"},{"category":"Composer","title":"check-platform-reqs","command":"composer.check-platform-reqs"},{"category":"Composer","title":"outdated","command":"composer.outdated"},{"category":"Composer","title":"search ...","command":"composer.search"},{"category":"Composer","title":"reinstall","command":"composer.reinstall"},{"category":"Composer","title":"run-script ...","command":"composer.run-script"},{"category":"Composer","title":"show --tree","command":"composer.show-tree"}],"taskDefinitions":[{"type":"composer","properties":{"command":{"type":"string","enum":["init","install","update","require","remove","bump","reinstall","check-platform-reqs","global","search","show","outdated","browse","suggests","fund","depends","prohibits","validate","status","self-update","config","create-project","dump-autoload","clear-cache","licenses","run-script","exec","diagnose","archive","audit","help"],"format":"[a-z\\-]+","description":"The composer command to run."},"args":{"type":"array","description":"Additional arguments for the composer command."}},"required":["command"]}],"keybindings":[],"debuggers":[],"walkthroughs":[]},"capabilities":{"virtualWorkspaces":{"supported":"limited","description":"In virtual workspaces, composer packages can't be installed or updated."},"untrustedWorkspaces":{"supported":true,"description":"The extension may require workspace trust to use 'php' 3rd party tool, or to navigate to PHP documentation website, or to navigate to the product website."}},"badges":[{"url":"https://badgen.net/badge/@php4vs/twitter/blue?icon=twitter","href":"https://twitter.com/php4vs","description":"PHP Tools on Twitter"},{"url":"https://img.shields.io/badge/-changelog-green","href":"https://www.devsense.com/en?from=vscode","description":"PHP Tools product page"}],"scripts":{"prepare":"powershell ./prepare.ps1","precompile":"npm run -S prepare","esbuild-base":"esbuild ./src/extension.ts --bundle --outfile=out/src/extension.js --external:vscode --format=cjs --platform=node","vscode:prepublish":"npm run -S esbuild-base -- --minify && powershell ./minify.ps1","compile":"npm run -S esbuild-base -- --sourcemap","postinstall":"","vscode:uninstall":""},"dependencies":{"applicationinsights":"^1.8.10","escape-string-regexp":"^1.0.5","file-url":"^2.0.0","http-proxy-agent":"^2.1.0","https-proxy-agent":"^2.2.4","iconv-lite":"^0.4.15","jsencrypt":"^3.2.1","minimatch":"^3.0.4","moment":"^2.17.1","node-rsa":"^1.0.7","open":"^8.4.0","recursive-readdir-sync":"^1.0.6","string-hash":"^1.1.3","urlencode":"^1.1.0","uuid":"^7","vsce":"^2.7.0","vscode-languageclient":"^7.0.0","vscode-languageserver":"^7.0.0","vscode-languageserver-protocol-foldingprovider":"^2.0.1","vscode-languageserver-textdocument":"^1.0.7","xmldom":"^0.6.0","xmlhttprequest":"^1.8.0"},"devDependencies":{"@types/mocha":"^5.2.7","@types/node":"^10.17.60","@types/vscode":"^1.63.1","esbuild":"^0.14.48","mocha":"^9.2.2","typescript":"^4.7.4","uglify-js":"^3.16.1"}},"location":{"$mid":1,"path":"/home/ilya/.vscode/extensions/devsense.composer-php-vscode-1.32.12895","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","metadata":{"id":"eed2a934-7bb6-4a5b-a29d-353077efd839","publisherId":"5db849bc-0940-444f-8936-5d2cdbb81abb","publisherDisplayName":"DEVSENSE","targetPlatform":"undefined","isApplicationScoped":false,"updated":true,"isPreReleaseVersion":false,"installedTimestamp":1680177133942,"preRelease":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"kelvin.vscode-sshfs","uuid":"bb9fc30a-080a-40bc-a792-08cc4ed66bcd"},"manifest":{"name":"vscode-sshfs","displayName":"SSH FS","description":"File system, terminal and task provider using SSH","publisher":"Kelvin","version":"1.26.0","engines":{"vscode":"^1.49.0"},"categories":["Other"],"activationEvents":["onFileSystem:ssh","onFileSystemAccess:ssh","onView:sshfs-configs","onView:sshfs-connections","onCommand:sshfs.new","onCommand:sshfs.add","onCommand:sshfs.disconnect","onCommand:sshfs.disconnectAll","onCommand:sshfs.terminal","onCommand:sshfs.focusTerminal","onCommand:sshfs.closeTerminal","onCommand:sshfs.configure","onCommand:sshfs.reload","onCommand:sshfs.settings","onCommand:sshfs.refresh","onView:sshfs-configs","onView:sshfs-connections","onCommand:sshfs.new","onCommand:sshfs.add","onCommand:sshfs.disconnect","onCommand:sshfs.disconnectAll","onCommand:sshfs.terminal","onCommand:sshfs.configure","onCommand:sshfs.reload","onCommand:sshfs.settings","onCommand:sshfs.refresh","onCommand:sshfs.focusTerminal","onCommand:sshfs.closeTerminal"],"main":"./dist/extension.js","homepage":"https://github.com/SchoofsKelvin/vscode-sshfs","author":{"name":"Kelvin Schoofs","email":"schoofs.kelvin@gmail.com","url":"https://github.com/SchoofsKelvin"},"repository":{"type":"git","url":"https://github.com/SchoofsKelvin/vscode-sshfs"},"bugs":{"url":"https://github.com/SchoofsKelvin/vscode-sshfs/issues"},"license":"GPL-3.0","icon":"resources/Logo.png","keywords":["remote","ssh","sshfs","sync","filesystem","terminal","sftp","scp"],"badges":[{"url":"https://img.shields.io/github/v/release/SchoofsKelvin/vscode-sshfs?include_prereleases&label=GitHub%20version","href":"https://github.com/SchoofsKelvin/vscode-sshfs/releases","description":"Releases on GitHub"},{"url":"https://img.shields.io/open-vsx/v/Kelvin/vscode-sshfs?label=Open%20VSX","href":"https://open-vsx.org/extension/Kelvin/vscode-sshfs","description":"Open VSX Registry"},{"url":"https://img.shields.io/visual-studio-marketplace/v/Kelvin.vscode-sshfs?label=VS%20Marketplace&logo=sdf","href":"https://marketplace.visualstudio.com/items?itemName=Kelvin.vscode-sshfs","description":"Visual Studio Marketplace"},{"url":"https://img.shields.io/visual-studio-marketplace/i/Kelvin.vscode-sshfs?label=Installs","href":"https://marketplace.visualstudio.com/items?itemName=Kelvin.vscode-sshfs","description":"Unique installs using Visual Studio Marketplace"}],"sponsor":{"url":"https://github.com/sponsors/SchoofsKelvin"},"contributes":{"views":{"sshfs":[{"id":"sshfs-configs","name":"Configurations","contextualTitle":"SSH FS - Configurations","icon":"resources/icon.svg","visibility":"visible"},{"id":"sshfs-connections","name":"Connections","contextualTitle":"SSH FS - Connections","icon":"resources/icon.svg","visibility":"visible"}]},"viewsContainers":{"activitybar":[{"id":"sshfs","title":"SSH FS","icon":"resources/icon.svg"}]},"commands":[{"command":"sshfs.new","title":"Create a SSH FS configuration","category":"SSH FS","icon":"$(new-file)"},{"command":"sshfs.add","title":"Add as Workspace folder","category":"SSH FS","icon":"$(new-folder)"},{"command":"sshfs.disconnect","title":"Disconnect","category":"SSH FS","icon":"$(debug-disconnect)"},{"command":"sshfs.disconnectAll","title":"Disconnect all","category":"SSH FS","icon":"$(debug-disconnect)"},{"command":"sshfs.terminal","title":"Open remote SSH terminal","category":"SSH FS","icon":"$(terminal)"},{"command":"sshfs.configure","title":"Edit configuration","category":"SSH FS","icon":"$(settings-gear)"},{"command":"sshfs.reload","title":"Reload configurations","category":"SSH FS","icon":"$(refresh)"},{"command":"sshfs.settings","title":"Open settings and edit configurations","category":"SSH FS","icon":"$(settings)"},{"command":"sshfs.refresh","title":"Refresh","category":"SSH FS","icon":"$(refresh)"},{"command":"sshfs.focusTerminal","title":"Focus terminal","category":"SSH FS","icon":"$(eye)"},{"command":"sshfs.closeTerminal","title":"Close terminal","category":"SSH FS","icon":"$(close)"}],"menus":{"commandPalette":[{"command":"sshfs.new","group":"SSH FS@1"},{"command":"sshfs.add","group":"SSH FS@2"},{"command":"sshfs.disconnect","group":"SSH FS@3"},{"command":"sshfs.terminal","group":"SSH FS@4"},{"command":"sshfs.configure","group":"SSH FS@5"},{"command":"sshfs.reload","group":"SSH FS@6"},{"command":"sshfs.disconnectAll","group":"SSH FS@7"},{"command":"sshfs.settings","group":"SSH FS@8"},{"command":"sshfs.focusTerminal","when":"false"},{"command":"sshfs.closeTerminal","when":"false"},{"command":"sshfs.refresh","when":"false"}],"view/title":[{"command":"sshfs.refresh","when":"view == 'sshfs-configs' || view == 'sshfs-connections'","group":"navigation@1"},{"command":"sshfs.new","when":"view == 'sshfs-configs'","group":"navigation@2"},{"command":"sshfs.add","when":"view == 'sshfs-connections'","group":"navigation@2"},{"command":"sshfs.disconnectAll","when":"view == 'sshfs-connections'","group":"navigation@3"},{"command":"sshfs.settings","when":"view == 'sshfs-configs' || view == 'sshfs-connections'","group":"navigation@100"}],"view/item/context":[{"command":"sshfs.add","when":"view == 'sshfs-configs' && viewItem == config","group":"inline@1"},{"command":"sshfs.terminal","when":"view == 'sshfs-configs' && viewItem == config","group":"inline@2"},{"command":"sshfs.configure","when":"view == 'sshfs-configs' && viewItem == config","group":"inline@3"},{"command":"sshfs.disconnect","when":"view == 'sshfs-configs' && viewItem == config","group":"inline@4"},{"command":"sshfs.terminal","when":"view == 'sshfs-connections' && viewItem == connection","group":"inline@1"},{"command":"sshfs.disconnect","when":"view == 'sshfs-connections' && viewItem == connection","group":"inline@2"},{"command":"sshfs.closeTerminal","when":"view == 'sshfs-connections' && viewItem == terminal","group":"inline@1"}],"explorer/context":[{"command":"sshfs.terminal","when":"explorerResourceIsFolder && resourceScheme == ssh","group":"navigation@30"}],"statusBar/remoteIndicator":[{"command":"sshfs.add","group":"remote_11_ssh_sshfs@1"},{"command":"sshfs.terminal","group":"remote_11_ssh_sshfs@2"},{"command":"sshfs.settings","group":"remote_11_ssh_sshfs@3"},{"command":"sshfs.disconnect","group":"remote_11_ssh_sshfs@4","when":"sshfs.openConnections > 0"},{"command":"sshfs.disconnectAll","group":"remote_11_ssh_sshfs@5","when":"sshfs.openConnections > 0"}]},"configuration":{"title":"SSH FS Configuration","properties":{"sshfs.configpaths":{"title":"A list of file locations to load SSH FS configurations from","description":"Location of JSON files to load configs from","type":"array","items":"string","default":[]},"sshfs.configs":{"title":"A list of SSH FS configurations","description":"Use the Settings UI to edit configurations (run command SSH FS: Open settings and edit configurations)","markdownDescription":"Use the Settings UI to edit configurations *(run command `SSH FS: Open settings and edit configurations`)*","type":"array","items":"object","default":[{"root":"/tmp","host":"localhost","port":22,"username":"root","password":"CorrectHorseBatteryStaple"}]},"sshfs.flags":{"title":"List of special flags to enable/disable certain fixes/features","description":"Flags are usually used for issues or beta testing. Flags can disappear/change anytime!","type":"array","items":"string","default":[]}}},"taskDefinitions":[{"type":"ssh-shell","properties":{"host":{"type":"string","description":"The configuration (name) to run this task on"},"command":{"type":"string","description":"The command to run on the server"},"workingDirectory":{"type":"string","description":"The working directory (relative to the config-defined root) to run the command in"}},"required":["host","command"]}],"resourceLabelFormatters":[{"scheme":"ssh","formatting":{"label":"${scheme}://${authority}/${path}","separator":"/","tildify":false,"stripPathStartingSeparator":true,"workspaceSuffix":"SSH FS"}}],"viewsWelcome":[{"view":"sshfs-configs","contents":"No configurations created yet"},{"view":"sshfs-connections","contents":"Not connected to anything"}]},"capabilities":{"virtualWorkspaces":true,"untrustedWorkspaces":{"supported":true}},"scripts":{"vscode:prepublish":"yarn workspaces foreach -tvip -j 2 run build","build":"webpack --mode production","compile":"webpack --mode development","watch":"webpack --mode development --watch"},"devDependencies":{"@types/node":"^12.7.12","@types/request":"^2.48.1","@types/semver":"^7.3.9","@types/vscode":"~1.49.0","@types/webpack":"^4.4.25","@types/winreg":"^1.2.30","@vscode/vsce":"^2.18.0","prettier":"^2.6.2","source-map":"^0.7.3","source-map-support":"^0.5.19","ts-loader":"^9.4.2","typescript":"~5.0.2","webpack":"^5.76.3","webpack-cli":"^5.0.1"},"dependencies":{"common":"workspace:*","event-stream":"^4.0.1","jsonc-parser":"^3.2.0","semver":"^7.3.5","socks":"^2.2.0","ssh2":"^1.6.0","winreg":"^1.2.4"},"resolutions":{"cpu-features":"npm:@favware/skip-dependency@1.1.3"},"workspaces":["./common","./webview"],"packageManager":"yarn@3.5.0"},"location":{"$mid":1,"path":"/home/ilya/.vscode/extensions/kelvin.vscode-sshfs-1.26.0","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","metadata":{"id":"bb9fc30a-080a-40bc-a792-08cc4ed66bcd","publisherId":"99daae2c-131e-4e21-b763-9ebee4f2cdf8","publisherDisplayName":"Kelvin Schoofs","targetPlatform":"undefined","isApplicationScoped":false,"updated":true,"isPreReleaseVersion":false,"installedTimestamp":1680177133825,"preRelease":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"bradlc.vscode-tailwindcss","uuid":"4db62a7c-7d70-419c-96d2-6c3a4dc77ea5"},"manifest":{"name":"vscode-tailwindcss","displayName":"Tailwind CSS IntelliSense","description":"Intelligent Tailwind CSS tooling for VS Code","author":"Brad Cornes <hello@bradley.dev>","license":"MIT","version":"0.9.11","homepage":"https://github.com/tailwindlabs/tailwindcss-intellisense","bugs":{"url":"https://github.com/tailwindlabs/tailwindcss-intellisense/issues","email":"hello@bradley.dev"},"repository":{"type":"git","url":"https://github.com/tailwindlabs/tailwindcss-intellisense.git"},"publisher":"bradlc","keywords":["tailwind","tailwindcss","css","intellisense","autocomplete","vscode"],"engines":{"vscode":"^1.67.0"},"categories":["Linters","Other"],"galleryBanner":{"color":"#f9fafb"},"icon":"media/icon.png","activationEvents":["onStartupFinished","onLanguage:tailwindcss","onCommand:tailwindCSS.showOutput"],"main":"dist/extension.js","capabilities":{"virtualWorkspaces":false},"contributes":{"languages":[{"id":"tailwindcss","aliases":["Tailwind CSS"],"configuration":"./tailwindcss.language.configuration.json"}],"commands":[{"command":"tailwindCSS.showOutput","title":"Tailwind CSS: Show Output","enablement":"tailwindCSS.hasOutputChannel"}],"grammars":[{"language":"tailwindcss","scopeName":"source.css.tailwind","path":"./syntaxes/source.css.tailwind.tmLanguage.json","tokenTypes":{"meta.function.url string.quoted":"other"}},{"scopeName":"tailwindcss.at-rules.injection","path":"./syntaxes/at-rules.tmLanguage.json","injectTo":["source.css","source.vue","source.svelte","text.html"]},{"scopeName":"tailwindcss.at-rules.scss.injection","path":"./syntaxes/at-rules.scss.tmLanguage.json","injectTo":["source.css.scss"]},{"scopeName":"tailwindcss.at-rules.postcss.injection","path":"./syntaxes/at-rules.postcss.tmLanguage.json","injectTo":["source.css.postcss"]},{"scopeName":"tailwindcss.at-apply.injection","path":"./syntaxes/at-apply.tmLanguage.json","injectTo":["source.css","source.css.postcss","source.vue","source.svelte","text.html"]},{"scopeName":"tailwindcss.theme-fn.injection","path":"./syntaxes/theme-fn.tmLanguage.json","injectTo":["source.css","source.css.postcss","source.vue","source.svelte","text.html"]},{"scopeName":"tailwindcss.screen-fn.injection","path":"./syntaxes/screen-fn.tmLanguage.json","injectTo":["source.css","source.css.postcss","source.vue","source.svelte","text.html"]}],"configuration":{"title":"Tailwind CSS IntelliSense","properties":{"tailwindCSS.emmetCompletions":{"type":"boolean","default":false,"markdownDescription":"Enable class name completions when using Emmet-style syntax, for example `div.bg-red-500.uppercase`"},"tailwindCSS.includeLanguages":{"type":"object","additionalProperties":{"type":"string"},"default":{},"markdownDescription":"Enable features in languages that are not supported by default. Add a mapping here between the new language and an already supported language.\n E.g.: `{\"plaintext\": \"html\"}`"},"tailwindCSS.files.exclude":{"type":"array","items":{"type":"string"},"default":["**/.git/**","**/node_modules/**","**/.hg/**","**/.svn/**"],"markdownDescription":"Configure glob patterns to exclude from all IntelliSense features. Inherits all glob patterns from the `#files.exclude#` setting."},"tailwindCSS.classAttributes":{"type":"array","items":{"type":"string"},"default":["class","className","ngClass"],"markdownDescription":"The HTML attributes for which to provide class completions, hover previews, linting etc."},"tailwindCSS.suggestions":{"type":"boolean","default":true,"markdownDescription":"Enable autocomplete suggestions.","scope":"language-overridable"},"tailwindCSS.hovers":{"type":"boolean","default":true,"markdownDescription":"Enable hovers.","scope":"language-overridable"},"tailwindCSS.codeActions":{"type":"boolean","default":true,"markdownDescription":"Enable code actions.","scope":"language-overridable"},"tailwindCSS.colorDecorators":{"type":"boolean","default":true,"markdownDescription":"Controls whether the editor should render inline color decorators for Tailwind CSS classes and helper functions.","scope":"language-overridable"},"tailwindCSS.validate":{"type":"boolean","default":true,"markdownDescription":"Enable linting. Rules can be configured individually using the `tailwindcss.lint.*` settings","scope":"language-overridable"},"tailwindCSS.lint.cssConflict":{"type":"string","enum":["ignore","warning","error"],"default":"warning","markdownDescription":"Class names on the same HTML element which apply the same CSS property or properties","scope":"language-overridable"},"tailwindCSS.lint.invalidApply":{"type":"string","enum":["ignore","warning","error"],"default":"error","markdownDescription":"Unsupported use of the [`@apply` directive](https://tailwindcss.com/docs/functions-and-directives/#apply)","scope":"language-overridable"},"tailwindCSS.lint.invalidScreen":{"type":"string","enum":["ignore","warning","error"],"default":"error","markdownDescription":"Unknown screen name used with the [`@screen` directive](https://tailwindcss.com/docs/functions-and-directives/#screen)","scope":"language-overridable"},"tailwindCSS.lint.invalidVariant":{"type":"string","enum":["ignore","warning","error"],"default":"error","markdownDescription":"Unknown variant name used with the [`@variants` directive](https://tailwindcss.com/docs/functions-and-directives/#variants)","scope":"language-overridable"},"tailwindCSS.lint.invalidConfigPath":{"type":"string","enum":["ignore","warning","error"],"default":"error","markdownDescription":"Unknown or invalid path used with the [`theme` helper](https://tailwindcss.com/docs/functions-and-directives/#theme)","scope":"language-overridable"},"tailwindCSS.lint.invalidTailwindDirective":{"type":"string","enum":["ignore","warning","error"],"default":"error","markdownDescription":"Unknown value used with the [`@tailwind` directive](https://tailwindcss.com/docs/functions-and-directives/#tailwind)","scope":"language-overridable"},"tailwindCSS.lint.recommendedVariantOrder":{"type":"string","enum":["ignore","warning","error"],"default":"warning","markdownDescription":"Class variants not in the recommended order (applies in [JIT mode](https://tailwindcss.com/docs/just-in-time-mode) only)","scope":"language-overridable"},"tailwindCSS.experimental.classRegex":{"type":"array","scope":"language-overridable"},"tailwindCSS.experimental.configFile":{"type":["null","string","object"],"default":null,"markdownDescription":"Manually specify the Tailwind config file or files that should be read to provide IntelliSense features. Can either be a single string value, or an object where each key is a config file path and each value is a glob or array of globs representing the set of files that the config file applies to."},"tailwindCSS.showPixelEquivalents":{"type":"boolean","default":true,"markdownDescription":"Show `px` equivalents for `rem` CSS values."},"tailwindCSS.rootFontSize":{"type":"number","default":16,"markdownDescription":"Root font size in pixels. Used to convert `rem` CSS values to their `px` equivalents. See `#tailwindCSS.showPixelEquivalents#`."},"tailwindCSS.inspectPort":{"type":["number","null"],"default":null,"markdownDescription":"Enable the Node.js inspector agent for the language server and listen on the specified port."}}}},"scripts":{"_esbuild":"node ../../esbuild.js src/extension.ts src/server.ts src/cssServer.ts --outdir=dist --external=pnpapi --external=vscode --external=lightningcss --external=@tailwindcss/oxide","dev":"concurrently --raw --kill-others \"npm run watch\" \"npm run check -- --watch\"","watch":"npm run clean && npm run _esbuild -- --watch","build":"npm run check && npm run clean && npm run _esbuild -- --minify && mv dist/server.js dist/tailwindServer.js && mv dist/cssServer.js dist/tailwindModeServer.js","package":"vsce package","publish":"vsce publish","copy:notices":"cp ../tailwindcss-language-server/ThirdPartyNotices.txt ./dist/ThirdPartyNotices.txt","vscode:prepublish":"npm run build && npm run copy:notices","clean":"rimraf dist","test":"jest","check":"tsc --noEmit"},"devDependencies":{"@types/braces":"3.0.1","@types/vscode":"1.65.0","braces":"3.0.2","color-name":"1.1.4","concurrently":"7.0.0","minimatch":"5.1.4","normalize-path":"3.0.0","rimraf":"3.0.2","vsce":"2.15.0","vscode-languageclient":"8.0.2"}},"location":{"$mid":1,"path":"/home/ilya/.vscode/extensions/bradlc.vscode-tailwindcss-0.9.11","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","metadata":{"id":"4db62a7c-7d70-419c-96d2-6c3a4dc77ea5","publisherId":"84722833-669b-4c7d-920e-b60e43fae19a","publisherDisplayName":"Tailwind Labs","targetPlatform":"undefined","isApplicationScoped":false,"updated":true,"isPreReleaseVersion":false,"installedTimestamp":1680177134127,"preRelease":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"prisma.prisma","uuid":"33ce9d6b-41cf-4972-a62b-386f7201981d"},"manifest":{"name":"prisma","displayName":"Prisma","description":"Adds syntax highlighting, formatting, auto-completion, jump-to-definition and linting for .prisma files.","version":"4.12.0","license":"Apache-2.0","icon":"logo_white.png","engines":{"vscode":"^1.56.0"},"publisher":"Prisma","categories":["Programming Languages"],"dependencies":{"@prisma/language-server":"4.12.0","checkpoint-client":"1.1.23","minimatch":"6.1.6","vscode-languageclient":"7.0.0","watcher":"^1.2.0"},"repository":{"type":"git","url":"https://github.com/prisma/language-tools.git","directory":"packages/vscode"},"scripts":{"build":"tsc -p ./","watch":"npm run build -- -w","test":"rm -rf ./dist && npm run build && node dist/src/__test__/runTest true","vscode:prepublish":"npm run build","package":"vsce package"},"main":"./dist/src/extension.js","activationEvents":["onLanguage:prisma","onLanguage:prisma","onCommand:prisma.restartLanguageServer","onCommand:prisma.filewatcherEnable","onCommand:prisma.filewatcherDisable"],"contributes":{"languages":[{"id":"prisma","aliases":["Prisma","prisma"],"icon":{"light":"./prisma_icon.svg","dark":"./prisma_icon.svg"},"extensions":[".prisma"],"configuration":"./language-configuration.json"}],"grammars":[{"language":"prisma","scopeName":"source.prisma","path":"./syntaxes/prisma.tmLanguage.json"},{"injectTo":["source.js","source.ts","source.js.jsx","source.jsx","source.tsx","source.vue"],"scopeName":"inline.prisma","path":"./syntaxes/prisma-inlined.json","embeddedLanguages":{"meta.embedded.block.prisma":"prisma"}},{"injectTo":["source.js","source.ts","source.js.jsx","source.jsx","source.tsx","source.vue"],"scopeName":"source.ts.prismaClientRawSQL","path":"./syntaxes/prismaClientRawSQL.json","embeddedLanguages":{"meta.embedded.block.sql":"sql"}},{"scopeName":"markdown.prisma.codeblock","path":"./syntaxes/prisma.markdown.json","injectTo":["text.html.markdown"],"embeddedLanguages":{"meta.embedded.block.prisma":"prisma"}}],"configuration":{"type":"object","title":"Prisma","properties":{"prisma.fileWatcher":{"scope":"window","type":"boolean","default":true,"description":"Enable/disable the File Watcher functionality for Prisma Client."},"prisma.trace.server":{"scope":"window","type":"string","enum":["off","messages","verbose"],"default":"off","description":"Setting for logging between the VS Code extension and the language server."}}},"commands":[{"command":"prisma.restartLanguageServer","title":"Restart Language Server","category":"Prisma"},{"command":"prisma.filewatcherEnable","title":"Enable the File Watcher functionality for Prisma Client.","category":"Prisma"},{"command":"prisma.filewatcherDisable","title":"Disable the File Watcher functionality for Prisma Client.","category":"Prisma"}]},"devDependencies":{"@types/glob":"8.0.1","@types/mocha":"10.0.1","@types/vscode":"1.56.0","@vscode/test-electron":"2.2.3","is-ci":"3.0.1","mocha":"10.2.0","ovsx":"0.8.0","typescript":"4.9.5","vsce":"2.15.0"},"gitHead":"7d51b157647fe1705813a30d1a77b8ccf136b8d4","publishConfig":{"access":"public"},"preview":false},"location":{"$mid":1,"path":"/home/ilya/.vscode/extensions/prisma.prisma-4.12.0","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","metadata":{"id":"33ce9d6b-41cf-4972-a62b-386f7201981d","publisherId":"2397d6f3-c7f1-4b03-9029-414f731a68ec","publisherDisplayName":"Prisma","targetPlatform":"undefined","isApplicationScoped":false,"updated":true,"isPreReleaseVersion":false,"installedTimestamp":1680177134149,"preRelease":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"devsense.phptools-vscode","uuid":"93916db4-e944-4c74-b68e-47f2834e9e93"},"manifest":{"name":"phptools-vscode","displayName":"PHP","description":"All-in-One PHP support - IntelliSense, Debug, Formatter, Code Lenses, Code Fixes, Linting, Refactoring, PHPUnit Tests, Web Server, and more.","icon":"icons/phptools-icon.png","version":"1.32.12895","qna":"https://community.devsense.com/","publisher":"DEVSENSE","preview":false,"license":"LicenseRef-LICENSE","galleryBanner":{"color":"#b9dcf4","theme":"light"},"repository":{"type":"git","url":"https://github.com/DEVSENSE/phptools-docs"},"homepage":"https://www.devsense.com/","engines":{"vscode":"^1.63.1","node":"^8.11.0"},"categories":["Programming Languages","Debuggers","Snippets","Linters","Formatters","Testing"],"keywords":["php","debug","autocomplete","refactoring","testing","completion","codeactions","format","IntelliSense","Xdebug","test","phpunit","composer","profiler","server","built-in"],"extensionPack":["devsense.composer-php-vscode","devsense.profiler-php-vscode"],"activationEvents":["onDebugResolve:php","onDebugDynamicConfigurations:php","onLanguage:php","workspaceContains:**/*.php","workspaceContains:phpunit.*","onCommand:phptools.activate","onCommand:phptools.todo.search","onCommand:phptools.debug.startWithStopOnEntry","onCommand:phptools.debug.startListen","onCommand:phptools.debug.startScript","onLanguage:php","onLanguage:phpx","onCommand:phptools.activate","onCommand:phptools.requesttrial","onCommand:phptools.releasenotes","onCommand:phptools.todo.search","onCommand:phptools.selectPhpVersion","onCommand:phptools.problems.scope","onCommand:phptools.debug.startWithStopOnEntry","onCommand:phptools.debug.startListen","onCommand:phptools.debug.startScript"],"main":"./out/src/extension","contributes":{"languages":[{"id":"php","aliases":["PHP","php"]},{"id":"phpx","aliases":["PHPX","phpx"],"configuration":"./syntaxes/phpx.configuration.json"}],"grammars":[{"language":"phpx","scopeName":"source.phpx","path":"./syntaxes/phpx.json"}],"breakpoints":[{"language":"php"}],"configuration":[{"type":"object","title":"PHP","properties":{"php.executablePath":{"description":"Default path to the 'php' executable.","type":["string","array","null"],"scope":"application"},"php.format.autoimport":{"markdownDeprecationMessage":"Use `#php.completion.autoimport#` instead."},"php.format.autoimport-docblock":{"markdownDeprecationMessage":"Use `#php.completion.autoimport-docblock#` instead."},"php.completion.parameters":{"markdownDescription":"Automatically insert parentheses `()` after completion of functions, and trigger parameter hints.","type":"string","default":"parentheses","enum":["none","parentheses","parameters"],"markdownEnumDescriptions":["Do not insert parentheses and do not trigger parameters completion.","Insert parentheses `()` after the function completion and place cursor inside them.","Insert parentheses and parameters snippet."],"scope":"window"},"php.completion.autoimport":{"markdownDescription":"Completion of types, functions, and constants outside of the current namespace scope.","type":"string","default":"auto-import","enum":["auto-import","fqn","none","hide"],"markdownEnumDescriptions":["Add corresponding `use` alias upon completion.","Fully qualifies the name upon completion.","Inserts the name as it is, without importing the alias.","Do not show inaccessible symbols in code completion."],"scope":"window"},"php.completion.autoimport-docblock":{"markdownDescription":"Completion of type names outside of the current namespace scope, when completing inside a PHP doc block (e.g. in `@param` tag).","type":"string","default":"fqn","enum":["fqn","auto-import","none","hide","default"],"markdownEnumDescriptions":["Fully qualifies the name upon completion.","Add corresponding `use` alias upon completion.","Inserts the name as it is, without importing the alias.","Do not show inaccessible types in code completion.","Use the setting from `#php.completion.autoimport#` option."],"scope":"window"},"php.completion.getterSnippet":{"type":"string","markdownDescription":"Code to be placed inside the getter function. This is inserted using code action over a private class properties to generate `getter` function.\n\nBy default it's similar to:\n\n```php\nreturn {PROPERTY};\n```\nUse variables:\n- `{PROPERTY}` (`$this->property` or `self::property`)\n- `{THIS}` (`$this` or ``)\n- `{NAME}` (the property name without `$`).","scope":"window"},"php.completion.setterSnippet":{"type":"string","markdownDescription":"Code to be placed inside the setter function. This is inserted using code action over a private class properties to generate `setter` function.\n\nBy default it's similar to:\n\n```php\n{PROPERTY} = ${NAME};\nreturn {THIS};\n```\nUse variables:\n- `{PROPERTY}` (`$this->property` or `self::property`)\n- `{THIS}` (`$this` or ``)\n- `{NAME}` (the property name without `$`).","scope":"window"},"php.inlayHints.parameters.enabled":{"type":"boolean","default":false,"markdownDescription":"Display inlay parameter names.\n```phpx\nfoo( /*name:*/ x ); \n```\n","scope":"window"},"php.inlayHints.parameters.suppressNameMatchingValue":{"type":"boolean","default":false,"markdownDescription":"Suppress inlay parameter name hint, when the parameter name matches the argument value.\n```phpx\n// foo( name: $name ); # suppress 'name:' because the argument looks the same\nfoo( $name );\n```\n","scope":"window"},"php.inlayHints.parameters.byReference":{"type":"boolean","default":false,"markdownDescription":"Display inlay `&` sign in front of arguments passed by reference.\n```phpx\nfoo( /*&*/$x ); // show '&' because '$x' is passed by reference \n```\n","scope":"window"},"php.inlayHints.types.return":{"type":"boolean","default":false,"markdownDescription":"Display inlay function return type inferred from the function code.\n```phpx\nfunction foo()/*: void*/ {\n```\n","scope":"window"},"php.inlayHints.types.variable":{"type":"boolean","default":false,"markdownDescription":"Display assigned variable type.\n```phpx\n$value/*: int*/ = strlen('str');\n```\n","scope":"window"},"php.inlayHints.types.suppressVariableFromLiteral":{"type":"boolean","default":true,"markdownDescription":"Suppress inlay hint for obvious variable assignments.\n```phpx\n$value/*: int*/ = 1;\n```\n","scope":"window"},"php.docblock.packageSnippet":{"type":["object","boolean"],"default":{},"examples":[{"enable":true,"@author":"${name:John}"}],"markdownDescription":"DocBlock snippet at file beginning. Example:\n```json\n\"php.docblock.packageSnippet\": {\n  \"@author\": \"${name:John}\",\n  \"@copyright\": \"(c) $CURRENT_YEAR\"\n}\n```"},"php.docblock.classSnippet":{"type":["object","boolean"],"default":{},"examples":[{"enable":true,"@author":"${name:John}"}],"markdownDescription":"DocBlock snippet above a class/interface/trait/enum. Example:\n```json\n\"php.docblock.classSnippet\": {\n  \"@author\": \"${name:John}\",\n  \"@copyright\": \"(c) $CURRENT_YEAR\"}\n```"},"php.docblock.propertySnippet":{"type":["object","boolean"],"default":{},"examples":[{"enable":true,"@author":"${name:John}"}],"markdownDescription":"DocBlock snippet above a property. Example:\n```json\n\"php.docblock.propertySnippet\": {\n  \"@author\": \"${name:John}\"\n}\n```"},"php.docblock.functionSnippet":{"type":["object","boolean"],"default":{},"examples":[{"enable":true,"@author":"${name:John}","@throws":false}],"markdownDescription":"DocBlock snippet above a function. Example:\n```json\n\"php.docblock.functionSnippet\": {\n  \"@author\": \"${name:John}\",\n  \"@throws\": false\n}\n```"},"php.docblock.variableSnippet":{"type":["object","boolean"],"default":{},"examples":[{"enable":true,"singleline":true}],"markdownDescription":"DocBlock snippet abve a variable assignment. Example:\n```json\n\"php.docblock.variableSnippet\": {\n  \"singleline\": true\n}\n```"},"php.docblock.getterSetterSnippet":{"type":["object","boolean"],"default":{},"examples":[{"enable":true,"@author":"${name:John}","summary":false}],"markdownDescription":"Snippet for DocBlocks generated using getter/setter code action"},"php.hover.parameters":{"type":"boolean","default":true,"markdownDescription":"Show function parameters description in the mouse hover tool-tip.","scope":"window"},"php.hover.documentation":{"type":"boolean","default":true,"markdownDescription":"If available, show symbol documentation link in the mouse hover tool-tip.","scope":"window"},"php.hover.fullname":{"type":"boolean","default":false,"markdownDescription":"Show full name of symbols, including the full class name.","scope":"window"},"php.hover.containingClass":{"type":"boolean","default":true,"markdownDescription":"Show containing class name of class members.","scope":"window"},"php.linkedEditing.variables":{"markdownDescription":"When `#editor.linkedEditing#` setting is enabled, this option specifies whether to apply linked edits to local variable names.","default":false,"type":"boolean","scope":"window"},"php.workspace.includePath":{"description":"Paths containing additional PHP declarations. Separated with semi-colon.","type":["string","array"],"scope":"window"},"php.workspace.shortOpenTag":{"markdownDescription":"Enable or disable parsing inside `<?` tag. Default value is `\"auto\"` so short open tags will be _enabled_ if there is no `<?xml` tag.","type":"string","scope":"window","default":"auto","enum":["auto","true","false"],"markdownEnumDescriptions":["Enable short open tags unless there is `<?xml` tag.","Enable PHP code inside short open tags.","Disable PHP code inside short open tags."]},"php.executables":{"markdownDescription":"Defines PHP profiles as a user defined name and a `php` binary path.\nExample: `\"php.executables\": { \"v7.4\": \"/usr/bin/php7.4\" }`","examples":[{"v7.4":"/usr/bin/php7.4"}],"type":"object","scope":"application"},"php.version":{"markdownDescription":"A PHP version or a profile name defined in `#php.executables#`.","type":"string","scope":"window"},"php.codeLens.enabled":{"description":"Enable/disable code lenses in PHP files.","type":"boolean","default":true,"scope":"application"},"php.problems.scope":{"markdownDescription":"What workspace folders get analyzed for problems.\n\nDefault is `\"user\"` which excludes \"/vendor\" folder.\n\n_Note, **fatal errors** and **parse errors** are always reported across the entire workspace._","type":"string","default":"opened","enum":["none","opened","user","all"],"markdownEnumDescriptions":["Workspace won't be analysed.","Only opened documents will be analyzed for problems.","Workspace will be analyzed excluding the root `\"/vendor\"` folder.","Entire workspace will be analyzed continuously. (PREMIUM)"],"scope":"window"},"php.problems.exclude":{"markdownDescription":"Path patterns to be ignored from reporting problems. Value can be set to `true` to ignore all problems or a comma separated list of specific problem codes.\n\n_See [Problems Configuration](https://docs.devsense.com/vscode/problems#phpproblemsexclude) for more details._\n\n\n_Example:_\n```json\n\"php.problems.exclude\": {\n  \"/\": [406],\n  \"vendor/\": true,\n}\n```","type":["object","null"],"examples":[{"php.problems.exclude":{"/":[406],"vendor/":true}}],"default":null,"scope":"window"},"php.problems.excludeGitIgnore":{"markdownDescription":"Do not report problems in files specified in `.gitignore` file.","type":"boolean","default":false,"scope":"window"},"php.problems.workspaceAnalysis":{"description":"Deprecated. Enable full workspace-wide analysis. Enabled by default.","type":["boolean"],"enum":[true,false],"default":true,"scope":"window","markdownDeprecationMessage":"Use `#php.problems.scope#` instead."},"php.stubs":{"markdownDescription":"Array of extension names to be included in the built-in IntelliSense, the localized manual, and code analysis. By default all the standard PHP extensions are included.\n\nExamples:\n\n```json\n{\n  \"php.stubs\": [\"*\", \"com\", \"pcntl\", \"xdebug\"]\n}\n```\n\nList of possible values:\n\n- `\"*\"` includes the standard set of extensions.\n- `\"all\"` includes all the available extensions.\n- `com`\n- `pcntl`\n- `zip`\n- `zlib`\n- ...","default":["*"],"type":"array","scope":"window","examples":[["*","com"],["all"]]},"php.debug.port":{"markdownDescription":"Default Xdebug port or array of ports. This value is used when `port` is not specified in `launch.json` settings. Usually 9000 or 9003.","default":[9003,9000],"type":["array","integer"],"scope":"window"},"phpTools.license":{"markdownDeprecationMessage":"This setting has been deprecated, you may delete it. Use _Command Palette_, the command `PHP Tools: Activate License`.","description":"The license fingerprint. (deprecated)","type":["string","null"],"scope":"application"},"phpTools.language":{"description":"Language of PHP Tools IntelliSense.","type":["string",null],"enum":["en","de","es","fr","ja","pt","ru","zh",null],"default":null,"scope":"application"},"php.highlight-todo.enable":{"markdownDescription":"Enable highligting of to-do comments (`@todo`, `// TODO`, or `# TODO`). Enabled by default.","type":"boolean","default":true,"scope":"window"},"php.highlight-todo.style":{"markdownDescription":"The style of to-do decoration. See [ThemableDecorationRenderOptions](https://code.visualstudio.com/api/references/vscode-api#ThemableDecorationRenderOptions) for details.","type":"object","default":{"backgroundColor":"#eecc00"},"scope":"window"},"phpunit.phpunit":{"description":"Path to PHPUnit binary to be used to run and debug the tests. It can be either full path or path relative to the workspace root.","type":"string","default":null,"scope":"window"},"phpunit.preTask":{"markdownDescription":"Task or array of tasks defined in `tasks.json` to be executed before a test execution is finished. Task attributes will get updated with `\"filter\"` or `\"testsuite\"` values.","type":["string","array"],"scope":"window"},"phpunit.postTask":{"markdownDescription":"Task or array of tasks defined in `tasks.json` to be executed after a test execution is finished. Task attributes will get updated with `\"filter\"` or `\"testsuite\"` values.","type":["string","array"],"scope":"window"}}},{"type":"object","title":"PHP Formatter","properties":{"php.format.codeStyle":{"markdownDescription":"Base code formatting style.","type":["string"],"enum":["PSR-2","PSR-12","Allman","K&R","PHP Tools","Laravel","WordPress","Drupal","Off"],"default":"PSR-12","scope":"window"},"php.format.rules.openBraceOnNewLineForFunctions":{"markdownDescription":"Place open brace `{` on a new line for methods, functions and constructors.\n```phpx\n\n//Enabled               //Disabled\nfunction foo()          function foo() {\n{                       }\n}\n\n\n```\nRequires [`PREMIUM`](command:phptools.activatewindow)\n","type":"boolean","default":null,"scope":"window"},"php.format.rules.openBraceOnNewLineForLambdas":{"markdownDescription":"Place open brace `{` on a new line for lambda functions.\n```phpx\n\n//Enabled                      //Disabled\n$lambda = function ()          $lambda = function () {\n{                              }\n}\n\n\n```\nRequires [`PREMIUM`](command:phptools.activatewindow)\n","type":"boolean","default":null,"scope":"window"},"php.format.rules.openBraceOnNewLineForAnonymousClasses":{"markdownDescription":"Place open brace `{` on a new line for anonymous classes.\n```phpx\n\n//Enabled                                       //Disabled\n$c = new class extends \\Foo implements          $c = new class extends \\Foo implements\n    \\ArrayAccess                                    \\ArrayAccess {\n{                                               };\n};\n\n\n```\nRequires [`PREMIUM`](command:phptools.activatewindow)\n","type":"boolean","default":null,"scope":"window"},"php.format.rules.openBraceOnNewLineForTypes":{"markdownDescription":"Place open brace `{` on a new line for types.\n```phpx\n\n//Enabled                                //Disabled\nclass X extends \\Foo implements          class X extends \\Foo implements\n    \\ArrayAccess                             \\ArrayAccess {\n{                                        }\n}\n\n\n```\nRequires [`PREMIUM`](command:phptools.activatewindow)\n","type":"boolean","default":null,"scope":"window"},"php.format.rules.indentBraces":{"markdownDescription":"Indent curly braces (`{` and `}`).\n```phpx\n\n//Enabled                  //Disabled\nfunction foo()             function foo()\n    {                      {\n    echo \"Hello\";              echo \"Hello\";\n    }                      }\n\n\n```\nRequires [`PREMIUM`](command:phptools.activatewindow)\n","type":"boolean","default":null,"scope":"window"},"php.format.rules.elseOnNewLine":{"markdownDescription":"Place `else` on a new line.\n```phpx\n\n//Enabled          //Disabled\nif (true)          if (true)\n{                  {\n}                  } else\nelse               {\n{                  }\n}\n\n\n```\nRequires [`PREMIUM`](command:phptools.activatewindow)\n","type":"boolean","default":null,"scope":"window"},"php.format.rules.catchOnNewLine":{"markdownDescription":"Place `catch` on a new line.\n```phpx\n\n//Enabled        //Disabled\ntry              try\n{                {\n}                } catch\ncatch            {\n{                }\n}                finally\nfinally          {\n{                }\n}\n\n\n```\nRequires [`PREMIUM`](command:phptools.activatewindow)\n","type":"boolean","default":null,"scope":"window"},"php.format.rules.finallyOnNewLine":{"markdownDescription":"Place `finally` on a new line.\n```phpx\n\n//Enabled        //Disabled\ntry              try\n{                {\n}                } \ncatch            catch\n{                {\n}                } finally\nfinally          {\n{                }\n}\n\n\n```\nRequires [`PREMIUM`](command:phptools.activatewindow)\n","type":"boolean","default":null,"scope":"window"},"php.format.rules.spaceAfterCast":{"markdownDescription":"Insert a space after a cast operator.\n```phpx\n\n//Enabled                 //Disabled\n$x = (int) $obj;          $x = (int)$obj;\n\n\n```\nRequires [`PREMIUM`](command:phptools.activatewindow)\n","type":"boolean","default":null,"scope":"window"},"php.format.rules.spaceAfterUnaryNot":{"markdownDescription":"Insert a space after a unary not operator.\n```phpx\n\n//Enabled             //Disabled\n$x = ! $obj;          $x = !$obj;\n\n\n```\nRequires [`PREMIUM`](command:phptools.activatewindow)\n","type":"boolean","default":null,"scope":"window"},"php.format.rules.spaceAroundConcatenation":{"markdownDescription":"Insert a space around concatenation operator.\n```phpx\n\n//Enabled                    //Disabled\n$x = $str1 . $str2;          $x = $str1.$str2;\n\n\n```\nRequires [`PREMIUM`](command:phptools.activatewindow)\n","type":"boolean","default":null,"scope":"window"},"php.format.rules.spaceBeforeParenthesesInArrowFunctions":{"markdownDescription":"Insert a space before arrow function parentheses.\n```phpx\n\n//Enabled                 //Disabled\n$x = fn () => 1;          $x = fn() => 1;\n\n\n```\nRequires [`PREMIUM`](command:phptools.activatewindow)\n","type":"boolean","default":null,"scope":"window"},"php.format.rules.spaceBeforeColonInControlStatements":{"markdownDescription":"Insert a space before colon in control flow blocks.\n```phpx\n\n//Enabled            //Disabled\nif (true) :          if (true):\nendif;               endif;\n\n\n```\nRequires [`PREMIUM`](command:phptools.activatewindow)\n","type":"boolean","default":null,"scope":"window"},"php.format.rules.spaceBeforeColonInReturnType":{"markdownDescription":"Insert a space before colon in a return type\n```phpx\n\n//Enabled                       //Disabled\nfunction foo() : int {          function foo(): int {\n}                               }\n\n\n```\nRequires [`PREMIUM`](command:phptools.activatewindow)\n","type":"boolean","default":null,"scope":"window"},"php.format.rules.spaceWithinCallParens":{"markdownDescription":"Insert a space within method, function and constructor call parentheses.\n```phpx\n\n//Enabled             //Disabled\nfoo( 1, 2 );          foo(1, 2);\n\n\n```\nRequires [`PREMIUM`](command:phptools.activatewindow)\n","type":"boolean","default":null,"scope":"window"},"php.format.rules.spaceWithinDeclParens":{"markdownDescription":"Insert a space within method, function and constructor declaration parentheses.\n```phpx\n\n//Enabled                           //Disabled\nfunction foo( $x, $y ) { }          function foo($x, $y) { }\n\n\n```\nRequires [`PREMIUM`](command:phptools.activatewindow)\n","type":"boolean","default":null,"scope":"window"},"php.format.rules.spaceWithinArrayInitilizersParens":{"markdownDescription":"Insert a space within array initializer parentheses.\n```phpx\n\n//Enabled                                           //Disabled\n$x = array( 1 => \"first\", 2 => \"second\" );          $x = array(1 => \"first\", 2 => \"second\");\n\n\n```\nRequires [`PREMIUM`](command:phptools.activatewindow)\n","type":"boolean","default":null,"scope":"window"},"php.format.rules.spaceWithinIfParens":{"markdownDescription":"Insert a space within `if` statement header parentheses.\n```phpx\n\n//Enabled                //Disabled\nif ( true ) { }          if (true) { }\n\n\n```\nRequires [`PREMIUM`](command:phptools.activatewindow)\n","type":"boolean","default":null,"scope":"window"},"php.format.rules.spaceWithinWhileParens":{"markdownDescription":"Insert a space within `while` statement header parentheses.\n```phpx\n\n//Enabled                       //Disabled\nwhile ( $a != $b ) { }          while ($a != $b) { }\n\n\n```\nRequires [`PREMIUM`](command:phptools.activatewindow)\n","type":"boolean","default":null,"scope":"window"},"php.format.rules.spaceWithinForParens":{"markdownDescription":"Insert a space within `for` statement header parentheses.\n```phpx\n\n//Enabled                                   //Disabled\nfor ( $i = 0; $i < 100; $i++ ) { }          for ($i = 0; $i < 100; $i++) { }\n\n\n```\nRequires [`PREMIUM`](command:phptools.activatewindow)\n","type":"boolean","default":null,"scope":"window"},"php.format.rules.spaceWithinForeachParens":{"markdownDescription":"Insert a space within `foreach` statement header parentheses.\n```phpx\n\n//Enabled                                        //Disabled\nforeach ( $expr as $key => $value ) { }          foreach ($expr as $key => $value) { }\n\n\n```\nRequires [`PREMIUM`](command:phptools.activatewindow)\n","type":"boolean","default":null,"scope":"window"},"php.format.rules.spaceWithinCatchParens":{"markdownDescription":"Insert a space within `catch` statement header parentheses.\n```phpx\n\n//Enabled                                //Disabled\ntry { } catch ( Exception ) { }          try { } catch (Exception) { }\n\n\n```\nRequires [`PREMIUM`](command:phptools.activatewindow)\n","type":"boolean","default":null,"scope":"window"},"php.format.rules.spaceWithinBrackets":{"markdownDescription":"Insert a space within brackets.\n```phpx\n\n//Enabled              //Disabled\n$y = $x[ 1 ];          $y = $x[1];\n\n\n```\nRequires [`PREMIUM`](command:phptools.activatewindow)\n","type":"boolean","default":null,"scope":"window"},"php.format.rules.spaceWithinBracketsAroundExpression":{"markdownDescription":"Insert a space within brackets around expression.\n```phpx\n\n//Enabled                   //Disabled\n$y = $x[ $i + 1 ];          $y = $x[$i + 1];\n\n\n```\nRequires [`PREMIUM`](command:phptools.activatewindow)\n","type":"boolean","default":null,"scope":"window"},"php.format.rules.spaceWithinExpressionParens":{"markdownDescription":"Insert a space within parentheses around expression.\n```phpx\n\n//Enabled                //Disabled\n$x = ( 1 + 2 );          $x = (1 + 2);\n\n\n```\nRequires [`PREMIUM`](command:phptools.activatewindow)\n","type":"boolean","default":null,"scope":"window"},"php.format.rules.arrayInitializersWrap":{"markdownDescription":"Defines wrapping behavior for array initializers.\n* `Off` - No wrapping is applied\r\n* `On every item` - When this option is selected each item is placed on a new line and properly indented if the array initializer is split across multiple lines.\r\n\r\n\n","type":["string"],"enum":["","on_every_item","off"],"enumItemLabels":["Inherit","On every item","Off"],"markdownEnumDescriptions":["Setting is inherited from base formatting style `php.format.codeStyle`","Each item is placed on a new line and properly indented if the call arguments are split across multiple lines.","No wrapping is applied."],"default":"","scope":"window"},"php.format.rules.arrayInitializersNewLineBeforeFirstElement":{"markdownDescription":"Place a new line before the first array element when wrapping.\n```phpx\n\n//Enabled       //Disabled\n$x = [          $x = [1, \n    1,              2\n    2           ];\n];\n\n\n```\nRequires [`PREMIUM`](command:phptools.activatewindow)\n","type":"boolean","default":null,"scope":"window"},"php.format.rules.arrayInitializersNewLineAfterLastElement":{"markdownDescription":"Place a new line after the last element when wrapping.\n```phpx\n\n//Enabled       //Disabled\n$x = [          $x = [\n    1,              1, \n    2               2];\n];\n\n\n```\nRequires [`PREMIUM`](command:phptools.activatewindow)\n","type":"boolean","default":null,"scope":"window"},"php.format.rules.arrayInitializersAlignKeyValuePairs":{"markdownDescription":"Automatically align `=>` operators.\n```phpx\n\n//Enabled                   //Disabled\n$x = [                      $x = [\n    1    => 'foo',              1 => 'foo',\n    1234 => 'bar'               1234 => 'bar'\n];                          ];\n\n\n```\nRequires [`PREMIUM`](command:phptools.activatewindow)\n","type":"boolean","default":null,"scope":"window"},"php.format.rules.callParametersWrap":{"markdownDescription":"Defines wrapping behavior for method, function and constructor call parameters.\n* `Off` - No wrapping is applied\n* `On every item` - When this option is selected each item is placed on a new line and properly indented if the call arguments are split across multiple lines.\n\n\n","type":["string"],"enum":["","on_every_item","off"],"enumItemLabels":["Inherit","On every item","Off"],"markdownEnumDescriptions":["Setting is inherited from base formatting style `php.format.codeStyle`","Each item is placed on a new line and properly indented if the call arguments are split across multiple lines.","No wrapping is applied."],"default":"","scope":"window"},"php.format.rules.callParametersNewLineAfterLeftParen":{"markdownDescription":"Place a new line after the left opening parenthesis `(` when wrapping.\n```phpx\n\n//Enabled       //Disabled\nfoo(            foo(1,\n    1,              2\n    2           );\n);\n\n\n```\nRequires [`PREMIUM`](command:phptools.activatewindow)\n","type":"boolean","default":null,"scope":"window"},"php.format.rules.callParametersNewLineBeforeRightParen":{"markdownDescription":"Place a new line before the right closing parenthesis `)` when wrapping.\n```phpx\n\n//Enabled       //Disabled\nfoo(            foo(\n    1,              1,\n    2               2);\n);\n\n\n```\nRequires [`PREMIUM`](command:phptools.activatewindow)\n","type":"boolean","default":null,"scope":"window"},"php.format.rules.declParametersWrap":{"markdownDescription":"Defines wrapping behavior for method or function declaration parameters.\n* `Off` - No wrapping is applied\n* `On every item` - When this option is selected each declaration parameter is placed on a new line and properly indented if the arguments are split across multiple lines.\n\n","type":["string"],"enum":["","on_every_item","off"],"enumItemLabels":["Inherit","On every item","Off"],"markdownEnumDescriptions":["Setting is inherited from base formatting style `php.format.codeStyle`","Each item is placed on a new line and properly indented if the call arguments are split across multiple lines.","No wrapping is applied."],"default":"","scope":"window"},"php.format.rules.declParametersNewLineAfterLeftParen":{"markdownDescription":"Place a new line after the left opening parenthesis `(` of function or method declaration header when wrapping.\n```phpx\n\n//Enabled              //Disabled\nfunction foo(          function foo($x,\n    $x,                    $y\n    $y                 ) {\n) {                    }\n}\n\n\n```\nRequires [`PREMIUM`](command:phptools.activatewindow)\n","type":"boolean","default":null,"scope":"window"},"php.format.rules.declParametersNewLineBeforeRightParen":{"markdownDescription":"Place a new line before the right closing parenthesis `)` of a function or method declaration header when wrapping.\n```phpx\n\n//Enabled              //Disabled\nfunction foo(          function foo(\n    $x,                    $x,\n    $y                     $y) {\n) {                    }\n}\n\n\n```\nRequires [`PREMIUM`](command:phptools.activatewindow)\n","type":"boolean","default":null,"scope":"window"},"php.format.rules.whileStatementNewLineAfterLeftParen":{"markdownDescription":"Place a new line after the left opening parenthesis `(` in a `while` statement header if it's split across multiple lines.\n```phpx\n\n//Enabled            //Disabled\nwhile(               while($x == 2\n    $x == 2          ) {\n) {                  }\n}\n\n\n```\nRequires [`PREMIUM`](command:phptools.activatewindow)\n","type":"boolean","default":null,"scope":"window"},"php.format.rules.whileStatementNewLineBeforeRightParen":{"markdownDescription":"Place a new line after the right closing parenthesis `)` in a `while` statement header if it's split across multiple lines.\n```phpx\n\n//Enabled            //Disabled\nwhile(               while(\n    $x == 2              $x == 2) {\n) {                  }\n}\n\n\n```\nRequires [`PREMIUM`](command:phptools.activatewindow)\n","type":"boolean","default":null,"scope":"window"},"php.format.rules.forStatementWrap":{"markdownDescription":"Defines wrapping behavior for `for` statement.\n* `Off` - No wrapping is applied\n* `On every item` - When this option is selected each item in `for` statement is placed on a new line and properly indented if they are split across multiple lines.\n\n\n\n","type":["string"],"enum":["","on_every_item","off"],"enumItemLabels":["Inherit","On every item","Off"],"markdownEnumDescriptions":["Setting is inherited from base formatting style `php.format.codeStyle`","Each item is placed on a new line and properly indented if the call arguments are split across multiple lines.","No wrapping is applied."],"default":"","scope":"window"},"php.format.rules.forStatementNewLineAfterLeftParen":{"markdownDescription":"Place a new line after the left opening parenthesis `(` in a `for` statement header if it's split across multiple lines.\n```phpx\n\n//Enabled              //Disabled\nfor(                   for($i = 0; \n    $i = 0;                $i < 100;\n    $i < 100;              $i++\n    $i++               ) {\n) {                    }\n}\n\n\n```\nRequires [`PREMIUM`](command:phptools.activatewindow)\n","type":"boolean","default":null,"scope":"window"},"php.format.rules.forStatementNewLineBeforeRightParen":{"markdownDescription":"Place a new line after the right closing parenthesis `)` in a `for` statement header if it's split across multiple lines.\n```phpx\n\n//Enabled              //Disabled\nfor(                   for($i = 0; \n    $i = 0;                $i < 100;\n    $i < 100;              $i++\n    $i++               ) {\n) {                    }\n}\n\n\n```\nRequires [`PREMIUM`](command:phptools.activatewindow)\n","type":"boolean","default":null,"scope":"window"},"php.format.rules.ifStatementNewLineAfterLeftParen":{"markdownDescription":"Place a new line after the left opening parenthesis `(` in a `if` or `elseif` statement header if it's split across multiple lines.\n```phpx\n\n//Enabled         //Disabled\nif(               if(true\n    true          ) {\n) {               }\n}\n\n\n```\nRequires [`PREMIUM`](command:phptools.activatewindow)\n","type":"boolean","default":null,"scope":"window"},"php.format.rules.ifStatementNewLineBeforeRightParen":{"markdownDescription":"Place a new line after the right closing parenthesis `)` in a `if` or `elseif` statement header if it's split across multiple lines.\n```phpx\n\n//Enabled         //Disabled\nif(               if(\n    true              true) {\n) {               }\n}\n\n\n```\nRequires [`PREMIUM`](command:phptools.activatewindow)\n","type":"boolean","default":null,"scope":"window"},"php.format.rules.implementsListWrap":{"markdownDescription":"Defines wrapping behavior for `implements` list in type declarations.\n* `Off` - No wrapping is applied\n* `On every item` - When this option is selected each interface in `implements` list is placed on a new line and properly indented if they are split across multiple lines.\n\n\n","type":["string"],"enum":["","on_every_item","off"],"enumItemLabels":["Inherit","On every item","Off"],"markdownEnumDescriptions":["Setting is inherited from base formatting style `php.format.codeStyle`","Each item is placed on a new line and properly indented if the call arguments are split across multiple lines.","No wrapping is applied."],"default":"","scope":"window"},"php.format.rules.newLineAfterImplements":{"markdownDescription":"Place a new line after `implements` in type declaration if the list of interfaces is split across multiple lines.\n```phpx\n\n//Enabled                   //Disabled\nclass X implements          class X implements A, \n    A,                          B, \n    B,                          C\n    C                       {\n{                           }\n}\n\n\n```\nRequires [`PREMIUM`](command:phptools.activatewindow)\n","type":"boolean","default":null,"scope":"window"},"php.format.rules.switchStatementNewLineAfterLeftParen":{"markdownDescription":"Place a new line after the left opening parenthesis `(` in a `switch` statement header if it's split across multiple lines.\n```phpx\n\n//Enabled        //Disabled\nswitch(          switch($x\n    $x           ) {\n) {              }\n}\n\n\n```\nRequires [`PREMIUM`](command:phptools.activatewindow)\n","type":"boolean","default":null,"scope":"window"},"php.format.rules.switchStatementNewLineBeforeRightParen":{"markdownDescription":"Place a new line after the right closing parenthesis `)` in a `switch` statement header if it's split across multiple lines.\n```phpx\n\n//Enabled        //Disabled\nswitch(          switch(\n    $x               $x) {\n) {              }\n}\n\n\n```\nRequires [`PREMIUM`](command:phptools.activatewindow)\n","type":"boolean","default":null,"scope":"window"},"php.format.rules.groupUseWrap":{"markdownDescription":"Defines wrapping behavior for group `use` list in type declarations.\n* `Off` - No wrapping is applied\n* `On every item` - When this option is selected each declaration in group `use` list is placed on a new line and properly indented if they are split across multiple lines.\n\n","type":["string"],"enum":["","on_every_item","off"],"enumItemLabels":["Inherit","On every item","Off"],"markdownEnumDescriptions":["Setting is inherited from base formatting style `php.format.codeStyle`","Each item is placed on a new line and properly indented if the call arguments are split across multiple lines.","No wrapping is applied."],"default":"","scope":"window"},"php.format.rules.groupUseNewLineBeforeFirstDeclaration":{"markdownDescription":"Place a new line before first group `use` declaration if the list of declarations is split across multiple lines.\n```phpx\n\n//Enabled                    //Disabled\nuse Vendor\\pkg\\ns\\{          use Vendor\\pkg\\ns\\{ns1\\A,\n    ns1\\A,                       ns2\\B,\n    ns2\\B,                   };\n};\n\n\n```\nRequires [`PREMIUM`](command:phptools.activatewindow)\n","type":"boolean","default":null,"scope":"window"},"php.format.rules.alignConsecutiveAssignments":{"markdownDescription":"Automatically align consecutive `=` assignments\n```phpx\n\n//Enabled            //Disabled\n$a     = 1;          $a = 1;\n$bbb   = 2;          $bbb = 2;\n$ccccc = 3;          $ccccc = 3;\n\n\n```\nRequires [`PREMIUM`](command:phptools.activatewindow)\n","type":"boolean","default":null,"scope":"window"},"php.format.rules.keepControlStatementsOnOneLine":{"markdownDescription":"Control statements are kept on one line.\n```phpx\n\n//Enabled                //Disabled\nif ($x) return;          if ($x)\n                         \treturn;\n\n\n```\nRequires [`PREMIUM`](command:phptools.activatewindow)\n","type":"boolean","default":null,"scope":"window"}}}],"configurationDefaults":{"php.suggest.basic":false,"php.validate.enable":false,"emmet.excludeLanguages":["php","markdown"],"files.associations":{"*.embeddedhtml":"html"}},"commands":[{"command":"phptools.activate","category":"PHP Tools","title":"Activate License","icon":"$(unlock)","enablement":"!isWeb"},{"command":"phptools.requesttrial","category":"PHP Tools","title":"Begin Free Trial ...","icon":"$(unlock)","enablement":"!isweb && !phptools.activated"},{"command":"phptools.releasenotes","category":"PHP Tools","title":"Release Notes","icon":"$(notebook)","enablement":"!isWeb"},{"command":"phptools.todo.search","category":"PHP","title":"Search todo ...","icon":"$(search)"},{"command":"phptools.selectPhpVersion","title":"Select PHP version ...","category":"PHP","icon":"$(versions)","enablement":"editorLangId==php && !isWeb"},{"command":"phptools.problems.scope","title":"Background Code Analysis","category":"PHP","icon":"%(alert)"},{"command":"phptools.debug.startWithStopOnEntry","title":"Start Debugging and Stop on Entry","category":"Debug (PHP)","icon":"$(debug-alt-small)","enablement":"debuggersAvailable && !inDebugMode"},{"command":"phptools.debug.startListen","title":"Start Listening for Xdebug","shortTitle":"Listen for Xdebug","category":"Debug (PHP)","icon":"$(debug-alt-small)","enablement":"debuggersAvailable && !inDebugMode"},{"command":"phptools.debug.startScript","title":"Launch current script in console and debug","shortTitle":"Launch current script","category":"Debug (PHP)","enablement":"editorLangId==php && debuggersAvailable && !inDebugMode","icon":"$(debug-console)"}],"keybindings":[{"command":"phptools.debug.startWithStopOnEntry","key":"F10","mac":"F10","when":"!inDebugMode && debugConfigurationType=='php'"},{"command":"phptools.debug.startWithStopOnEntry","key":"F11","mac":"F11","when":"!inDebugMode && debugConfigurationType=='php'"}],"debuggers":[{"type":"php","label":"PHP (Xdebug)","enableBreakpointsFor":{"languageIds":["php"]},"configurationAttributes":{"launch":{"required":[],"properties":{"program":{"type":"string","description":"Absolute path to the program."},"stopOnEntry":{"type":"boolean","description":"Automatically stop program after launch.","default":false},"externalConsole":{"type":"boolean","description":"Launch debug target in external console.","default":false},"args":{"type":"array","description":"Command line arguments passed to the program.","items":{"type":"string"},"default":[]},"cwd":{"type":"string","description":"Absolute path to the working directory of the program being debugged. Default is the current workspace.","default":"${workspaceRoot}"},"envfile":{"type":"string","markdownDescription":"Path to `.env` file. Environment variables will be merged into the process environment variables.","examples":[".env"]},"phpVersion":{"type":"string","markdownDescription":"PHP version or profile name defined in `#php.executables#`"},"runtimeExecutable":{"type":"string","description":"Absolute path to the runtime executable to be used. Default is the runtime executable on the PATH.","default":"php"},"runtimeArgs":{"type":"array","description":"Optional arguments passed to the runtime executable.","items":{"type":"string"},"default":[]},"env":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the program.","default":{}},"port":{"type":["integer","array"],"description":"Port on which to listen for Xdebug"},"serverSourceRoot":{"type":"string","description":"Deprecated: The source root when debugging a remote host","deprecationMessage":"Property serverSourceRoot is deprecated, please use pathMappings to define a server root."},"localSourceRoot":{"type":"string","description":"Deprecated: The source root on this machine that is the equivalent to the serverSourceRoot on the server.","deprecationMessage":"Property localSourceRoot is deprecated, please use pathMappings to define a local root."},"pathMappings":{"type":"object","default":{},"description":"A mapping of server paths to local paths."},"exclude":{"type":"array","items":"string","description":"Glob patterns that the debugger won't debug.","default":["**/vendor/**/*.php"]},"log":{"type":"boolean","description":"If true, will log all communication between VS Code and the adapter"},"noDebug":{"type":"boolean","description":"If true, starts the process without debugging. False by default ('debug' mode enabled)."},"noDevelop":{"type":"boolean","description":"If true, Xdebug 'develop' mode is disabled. False by default ('develop' mode enabled)."},"profile":{"type":"boolean","description":"If true, enables Xdebug 'profile' mode. False by default ('profile' mode disabled)."},"dbgpProxy":{"type":"object","properties":{"enable":{"type":"boolean","description":"If True, will connect to DBGp proxy configured in this section","default":false},"host":{"type":"string","description":"The host address where the proxy is located. It's usually same as web server, but it's doesn't have to be.","default":"127.0.0.1"},"port":{"type":"number","description":"The port where the proxy server is listening.","default":9001},"ideKey":{"type":"string","description":"The Xdebug IDE Key used to register the VS CODE. If not set, the current user name is used instead."}}}}}},"languages":["php"],"configurationSnippets":[{"label":"PHP: Launch built-in server","description":"Launches PHP's built-in development server and starts debugging.","body":{"name":"Launch built-in server","type":"php","request":"launch","runtimeArgs":["-S","localhost:8000","-t","."],"port":9003,"serverReadyAction":{"action":"openExternally"}}},{"label":"PHP: Launch & Profile built-in server","description":"Launches PHP's built-in development server and starts profiling requests.","body":{"name":"Launch & Profile built-in server","type":"php","request":"launch","noDebug":true,"profile":true,"runtimeArgs":["-S","localhost:8000","-t","."],"port":9003,"serverReadyAction":{"action":"openExternally"}}},{"label":"PHP: Launch current script in console","description":"Launches currently opened PHP document as a console application.","body":{"name":"Launch current script in console","type":"php","request":"launch","program":"^\"\\${file}\"","cwd":"^\"\\${fileDirname}\"","externalConsole":false,"port":9003}},{"label":"PHP: Listen for Xdebug","description":"Starts debugging by waiting for an incoming Xdebug connection from a remote server.","body":{"name":"Listen for Xdebug","type":"php","request":"launch","port":[9003,9000]}}],"initialConfigurations":[{"name":"Launch built-in server and debug","type":"php","request":"launch","runtimeArgs":["-S","localhost:8000","-t","."],"port":9003,"serverReadyAction":{"action":"openExternally"}},{"name":"Debug current script in console","type":"php","request":"launch","program":"${file}","cwd":"${fileDirname}","externalConsole":false,"port":9003},{"name":"Listen for Xdebug","type":"php","request":"launch","port":9003}]}],"taskDefinitions":[{"type":"php","properties":{"file":{"type":"string","description":"Path to the .php file to be executed."},"args":{"type":["array","string"],"description":"Script file arguments."},"phpVersion":{"type":"string","description":"PHP version or profile name defined in 'php.executables'"}},"required":["file"]}]},"capabilities":{"virtualWorkspaces":{"supported":"limited","description":"In virtual workspaces, not all files might be loaded and resolving and finding references might be limited."},"untrustedWorkspaces":{"supported":true}},"badges":[{"url":"https://badgen.net/badge/@php4vs/twitter/blue?icon=twitter","href":"https://twitter.com/php4vs","description":"PHP Tools on Twitter"},{"url":"https://img.shields.io/badge/platform-MacOS%20%7C%20Linux%20%7C%20Win-green.svg","href":"https://www.devsense.com/download#vscode","description":"PHP Tools Download"},{"url":"https://img.shields.io/badge/php-5.4%20--%205.6%20%7C%207.0%20--%208.2-8892BF.svg?logo=php","href":"https://docs.devsense.com/en/vscode/configuration","description":"Supported PHP Versions"},{"url":"https://img.shields.io/badge/-changelog-green","href":"https://www.devsense.com/en/download/vscode","description":"PHP Tools for VS Code Changelog"}],"scripts":{"prepare":"powershell ./prepare.ps1","precompile":"npm run -S prepare","vscode:prepublish":"powershell ./prepublish.ps1 && npm run -S esbuild-base -- --minify && npm run -S esbuild-uninstall -- --minify && powershell ./minify.ps1","esbuild-base":"esbuild ./src/extension.ts --bundle --outfile=out/src/extension.js --external:vscode --format=cjs --platform=node","esbuild-uninstall":"esbuild ./src/uninstall.ts --bundle --outfile=out/src/uninstall.js --external:vscode --format=cjs --platform=node","compile":"dotnet publish ../Devsense.PHP.LanguageServer --ignore-failed-sources --output out/server && npm run -S esbuild-base -- --sourcemap && npm run -S esbuild-uninstall","postinstall":"","vscode:uninstall":"node ./out/src/uninstall","build-tests":"tsc -p ./test/","pretest":"npm run compile && npm run -S build-tests","test":"node ./out/test/runTest.js"},"dependencies":{"@vscode/debugadapter":"^1.54.0","@vscode/debugprotocol":"^1.54.0","@vscode/vsce":"^2.7.0","applicationinsights":"^1.8.10","escape-string-regexp":"^1.0.5","highlight.js":"^11.6.0","iconv-lite":"^0.4.15","jsencrypt":"^3.2.1","markdown-it":"^13.0.1","minimatch":"^5.1.0","moment":"^2.17.1","node-rsa":"^1.0.7","open":"^8.4.0","recursive-readdir-sync":"^1.0.6","string-hash":"^1.1.3","urlencode":"^1.1.0","uuid":"^7","vscode-languageclient":"^7.0.0","vscode-languageserver":"^7.0.0","vscode-languageserver-protocol-foldingprovider":"^2.0.1","vscode-nls":"^3.2.2","xmldom":"^0.6.0","xmlhttprequest":"^1.8.0"},"devDependencies":{"@types/glob":"^8.0.0","@types/minimatch":"^5.1.0","@types/mocha":"^10.0.1","@types/node":"^10.17.60","@types/vscode":"^1.63.1","@vscode/test-electron":"^2.2.1","chai":"^4.3.7","esbuild":"^0.14.48","mocha":"^10.1.0","source-map-support":"^0.5.12","typescript":"^4.7.4","uglify-js":"^3.16.1"}},"location":{"$mid":1,"path":"/home/ilya/.vscode/extensions/devsense.phptools-vscode-1.32.12895-linux-x64","scheme":"file"},"isBuiltin":false,"targetPlatform":"linux-x64","metadata":{"id":"93916db4-e944-4c74-b68e-47f2834e9e93","publisherId":"5db849bc-0940-444f-8936-5d2cdbb81abb","publisherDisplayName":"DEVSENSE","targetPlatform":"linux-x64","isApplicationScoped":false,"updated":true,"isPreReleaseVersion":false,"installedTimestamp":1680177134172,"preRelease":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"catppuccin.catppuccin-vsc","uuid":"69264e4d-cd3b-468a-8f2b-e69673c7d864"},"manifest":{"name":"catppuccin-vsc","displayName":"Catppuccin for VSCode","publisher":"Catppuccin","description":"🦌 Soothing pastel theme for VSCode","version":"2.6.3","engines":{"vscode":"^1.70.0","node":">=16.0.0 <17.0.0"},"categories":["Themes"],"extensionKind":["ui","workspace"],"activationEvents":["*"],"capabilities":{"untrustedWorkspaces":{"supported":true},"virtualWorkspaces":true},"main":"dist/main.js","browser":"dist/browser.js","contributes":{"themes":[{"label":"Catppuccin Mocha","uiTheme":"vs-dark","path":"./themes/mocha.json"},{"label":"Catppuccin Macchiato","uiTheme":"vs-dark","path":"./themes/macchiato.json"},{"label":"Catppuccin Frappé","uiTheme":"vs-dark","path":"./themes/frappe.json"},{"label":"Catppuccin Latte","uiTheme":"vs","path":"./themes/latte.json"}],"configuration":[{"title":"Catppuccin","properties":{"catppuccin.boldKeywords":{"type":"boolean","default":true,"markdownDescription":"Controls whether to use **bold** for keywords."},"catppuccin.italicKeywords":{"type":"boolean","default":true,"markdownDescription":"Controls whether to use *italics* for keywords."},"catppuccin.italicComments":{"type":"boolean","default":true,"markdownDescription":"Controls whether to use *italics* for comments."},"catppuccin.colorOverrides":{"type":"object","default":{},"markdownDescription":"Custom color overrides. Assign your own hex codes to palette colors. See [the docs](https://github.com/catppuccin/vscode#override-palette-colors) for reference.","$ref":"https://raw.githubusercontent.com/catppuccin/vscode/main/schemas/colorOverrides.schema.json"},"catppuccin.customUIColors":{"type":"object","default":{},"markdownDescription":"Customize UI colors. Map `workbench.colorCustomizations` to palette colors. See [the docs](https://github.com/catppuccin/vscode#use-palette-colors-on-workbench-elements-ui) for reference."},"catppuccin.accentColor":{"type":"string","default":"mauve","description":"Controls which accent color to use.","enum":["rosewater","flamingo","pink","mauve","red","maroon","peach","yellow","green","teal","sky","sapphire","blue","lavender"]},"catppuccin.workbenchMode":{"type":"string","default":"default","description":"Controls how the workbench should be styled.","enum":["default","flat"],"enumDescriptions":["The default look, using 3 shades of the base color.","A more flat look, using 2 shades of the base color."]},"catppuccin.bracketMode":{"type":"string","default":"rainbow","description":"Controls how bracket pairs should be themed","enum":["rainbow","dimmed","monochromatic","neovim"],"enumDescriptions":["Uses 6 rainbow colors for matching bracket pairs.","Uses the same 6 rainbow colors as `rainbow`, but has a dimmed appearance.","A monochromatic, grey appearance for matching bracket pairs.","Uses the same bracket pair colors as our neovim port."]}}}]},"repository":{"type":"git","url":"https://github.com/catppuccin/vscode.git"},"bugs":{"url":"https://github.com/catppuccin/vscode/issues"},"sponsor":{"url":"https://opencollective.com/catppuccin"},"icon":"icon.png","license":"MIT","devDependencies":{"@catppuccin/palette":"^0.1.5","@types/node":"^16.0.0","@types/vscode":"^1.70.0","@typescript-eslint/eslint-plugin":"^5.34.0","@typescript-eslint/parser":"^5.34.0","@vscode/vsce":"^2.15.0","esbuild":"^0.17.5","eslint":"^8.22.0","eslint-config-prettier":"^8.5.0","eslint-plugin-prettier":"^4.2.1","husky":">=6","lint-staged":">=10","prettier":"^2.7.1","rimraf":"^4.1.2","ts-node":"^10.9.1","typescript":"^4.7.4"},"lint-staged":{"*.ts":"eslint --cache --fix","*.{ts,json,md}":"prettier --write"},"scripts":{"compile":"node ./build.js","compile:theme":"ts-node src/hooks/generateThemes.ts","build":"yarn clean && yarn compile:theme && yarn compile","postbuild":"prettier -w ./src ./themes","dev":"DEBUG=1 yarn build","clean":"rimraf dist *.vsix","lint":"eslint . --ext .ts","prepare":"husky install","package":"vsce package --allow-star-activation --yarn"}},"location":{"$mid":1,"path":"/home/ilya/.vscode/extensions/catppuccin.catppuccin-vsc-2.6.3","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","metadata":{"id":"69264e4d-cd3b-468a-8f2b-e69673c7d864","publisherId":"e7d2ed61-53e0-4dd4-afbe-f536c3bb4316","publisherDisplayName":"Catppuccin","targetPlatform":"undefined","isApplicationScoped":false,"updated":true,"isPreReleaseVersion":false,"installedTimestamp":1680249664713,"preRelease":false},"isValid":true,"validations":[]}]}